[{"/Users/fabiolalombardi/Desktop/homebase-app/src/index.tsx":"1","/Users/fabiolalombardi/Desktop/homebase-app/src/App.tsx":"2","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/context.tsx":"3","/Users/fabiolalombardi/Desktop/homebase-app/src/store/index.ts":"4","/Users/fabiolalombardi/Desktop/homebase-app/src/router/explorer.tsx":"5","/Users/fabiolalombardi/Desktop/homebase-app/src/components/common/toolbar.tsx":"6","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/reducer.ts":"7","/Users/fabiolalombardi/Desktop/homebase-app/src/store/dao-info/reducer.ts":"8","/Users/fabiolalombardi/Desktop/homebase-app/src/theme/index.ts":"9","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/hook.ts":"10","/Users/fabiolalombardi/Desktop/homebase-app/src/utils.ts":"11","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/DAO.tsx":"12","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/Treasury.tsx":"13","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/index.tsx":"14","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/List.tsx":"15","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/action.ts":"16","/Users/fabiolalombardi/Desktop/homebase-app/src/store/dao-info/action.ts":"17","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/connectors.ts":"18","/Users/fabiolalombardi/Desktop/homebase-app/src/store/mock/mock.ts":"19","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Review.tsx":"20","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Summary.tsx":"21","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/TokenSettings.tsx":"22","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/DaoSettings.tsx":"23","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/SelectTemplate.tsx":"24","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Governance.tsx":"25","/Users/fabiolalombardi/Desktop/homebase-app/src/hooks/useOriginate.tsx":"26","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/ConnectWallet.tsx":"27","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/SearchInput.tsx":"28","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/Header.tsx":"29","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/ProposalTableRow.tsx":"30","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/store/index.ts":"31","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/TokenHoldersRow.tsx":"32","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/treasuryDAO/deploy.ts":"33","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/deploy.ts":"34","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/treasuryDAO/code.ts":"35","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/metadata.ts":"36","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/utils.ts":"37","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/code.ts":"38","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/Proposals.tsx":"39","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/SideBar.tsx":"40","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/NewProposalDialog.tsx":"41","/Users/fabiolalombardi/Desktop/homebase-app/src/store/funds/reducer.ts":"42","/Users/fabiolalombardi/Desktop/homebase-app/src/store/funds/action.ts":"43"},{"size":437,"mtime":1607369477870,"results":"44","hashOfConfig":"45"},{"size":975,"mtime":1611940603672,"results":"46","hashOfConfig":"45"},{"size":655,"mtime":1607369477872,"results":"47","hashOfConfig":"45"},{"size":955,"mtime":1611956625936,"results":"48","hashOfConfig":"45"},{"size":855,"mtime":1611941516303,"results":"49","hashOfConfig":"45"},{"size":3557,"mtime":1611940193055,"results":"50","hashOfConfig":"45"},{"size":409,"mtime":1609964133663,"results":"51","hashOfConfig":"45"},{"size":2551,"mtime":1611597178014,"results":"52","hashOfConfig":"45"},{"size":3982,"mtime":1611953643412,"results":"53","hashOfConfig":"45"},{"size":832,"mtime":1610908014024,"results":"54","hashOfConfig":"45"},{"size":200,"mtime":1611005307550,"results":"55","hashOfConfig":"45"},{"size":8685,"mtime":1611941680717,"results":"56","hashOfConfig":"45"},{"size":3296,"mtime":1611003853155,"results":"57","hashOfConfig":"45"},{"size":10061,"mtime":1611940193059,"results":"58","hashOfConfig":"45"},{"size":3887,"mtime":1611940197766,"results":"59","hashOfConfig":"45"},{"size":145,"mtime":1609964133660,"results":"60","hashOfConfig":"45"},{"size":675,"mtime":1611597178013,"results":"61","hashOfConfig":"45"},{"size":1264,"mtime":1611214747148,"results":"62","hashOfConfig":"45"},{"size":870,"mtime":1611003853156,"results":"63","hashOfConfig":"45"},{"size":1049,"mtime":1611940193058,"results":"64","hashOfConfig":"45"},{"size":8771,"mtime":1611597178010,"results":"65","hashOfConfig":"45"},{"size":10558,"mtime":1611940193059,"results":"66","hashOfConfig":"45"},{"size":7145,"mtime":1611940193056,"results":"67","hashOfConfig":"45"},{"size":3971,"mtime":1611940193058,"results":"68","hashOfConfig":"45"},{"size":17482,"mtime":1611940193057,"results":"69","hashOfConfig":"45"},{"size":1654,"mtime":1611609370231,"results":"70","hashOfConfig":"45"},{"size":1651,"mtime":1611597178005,"results":"71","hashOfConfig":"45"},{"size":1246,"mtime":1611940193060,"results":"72","hashOfConfig":"45"},{"size":1169,"mtime":1611005307547,"results":"73","hashOfConfig":"45"},{"size":2623,"mtime":1611597178012,"results":"74","hashOfConfig":"45"},{"size":3039,"mtime":1611940197764,"results":"75","hashOfConfig":"45"},{"size":914,"mtime":1611597178012,"results":"76","hashOfConfig":"45"},{"size":2689,"mtime":1611940197765,"results":"77","hashOfConfig":"45"},{"size":1153,"mtime":1611609370228,"results":"78","hashOfConfig":"45"},{"size":111595,"mtime":1611609370230,"results":"79","hashOfConfig":"45"},{"size":16173,"mtime":1611609370229,"results":"80","hashOfConfig":"45"},{"size":585,"mtime":1611609370230,"results":"81","hashOfConfig":"45"},{"size":242,"mtime":1611609370228,"results":"82","hashOfConfig":"45"},{"size":6535,"mtime":1611944120891,"results":"83","hashOfConfig":"45"},{"size":610,"mtime":1611942309374,"results":"84","hashOfConfig":"45"},{"size":9488,"mtime":1611960257169,"results":"85","hashOfConfig":"45"},{"size":623,"mtime":1611954812792,"results":"86","hashOfConfig":"45"},{"size":234,"mtime":1611954659599,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"d502qi",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":23,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"189","usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":13,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"194","usedDeprecatedRules":"90"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"197","usedDeprecatedRules":"90"},"/Users/fabiolalombardi/Desktop/homebase-app/src/index.tsx",[],[],"/Users/fabiolalombardi/Desktop/homebase-app/src/App.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/context.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/index.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/router/explorer.tsx",["198"],"import { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\nimport { DAOsList } from \"../pages/daoexplorer/pages/List\";\nimport { DAO } from \"../pages/daoexplorer/pages/DAO\";\nimport { Treasury } from \"../pages/daoexplorer/pages/Treasury\";\nimport { Proposals } from \"../pages/daoexplorer/pages/Proposals\";\n\nexport const DAOExplorerRouter = () => {\n  const match = useRouteMatch();\n\n  console.log(match);\n\n  return (\n    <Switch>\n      <Route path={`${match.url}/daos`}>\n        <DAOsList />\n      </Route>\n      <Route path={`${match.url}/dao/:id`}>\n        <DAO />\n      </Route>\n      <Route path={`${match.url}/treasury/:id`}>\n        <Treasury />\n      </Route>\n      <Route path={`${match.url}/proposals`}>\n        <Proposals />\n      </Route>\n      <Redirect to={`${match.url}/daos`} />\n    </Switch>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/components/common/toolbar.tsx",["199"],"import {\n  AppBar,\n  Toolbar,\n  Button,\n  styled,\n  Typography,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { toShortAddress } from \"../../utils\";\nimport HomeButton from \"../../assets/logos/homebase.svg\";\nimport { useConnectWallet } from \"../../store/wallet/hook\";\nimport { useLocation } from \"react-router-dom\";\n\nconst StyledAppBar = styled(AppBar)({\n  boxShadow: \"none\",\n});\n\nconst StyledToolbar = styled(Toolbar)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  flexWrap: \"wrap\",\n  height: 100,\n  paddingLeft: 0,\n  paddingRight: 0,\n});\n\nconst StatusDot = styled(Box)({\n  borderRadius: \"100%\",\n  width: 8,\n  height: 8,\n  background: \"#4BCF93\",\n});\n\nconst AddressContainer = styled(Grid)({\n  width: \"min-content\",\n  paddingRight: 24,\n});\n\nconst LogoText = styled(Typography)({\n  fontWeight: \"bold\",\n  fontSize: \"18px\",\n});\n\nconst custom = {\n  logo: {\n    height: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n  appBorder: {\n    borderBottom: \"2px solid #3D3D3D\",\n  },\n  appHeight: {\n    height: \"inherit\",\n  },\n  appLogoHeight: {\n    height: \"inherit\",\n    borderRight: \"2px solid #3D3D3D\",\n  },\n};\nexport const Navbar: React.FC = () => {\n  const account = useSelector<AppState, AppState[\"wallet\"][\"address\"]>(\n    (state) => state.wallet.address\n  );\n\n  const { tezos, connect } = useConnectWallet();\n  const location = useLocation();\n\n  return (\n    <StyledAppBar\n      position=\"sticky\"\n      color=\"primary\"\n      style={location.pathname === \"/creator\" ? undefined : custom.appBorder}\n    >\n      <StyledToolbar>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          style={custom.appHeight}\n        >\n          <Grid\n            item\n            xs={3}\n            style={\n              location.pathname === \"/creator\"\n                ? custom.appLogoHeight\n                : undefined\n            }\n          >\n            <Box\n              style={location.pathname === \"/creator\" ? custom.logo : undefined}\n            >\n              <Grid\n                container\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                justify=\"center\"\n              >\n                <Grid item>\n                  <img src={HomeButton} />\n                </Grid>\n                <Grid item>\n                  <Box paddingLeft=\"10px\">\n                    <LogoText color=\"textSecondary\">Homebase</LogoText>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Grid>\n\n          <Grid\n            item\n            xs={9}\n            container\n            justify=\"flex-end\"\n            style={custom.appHeight}\n          >\n            {account ? (\n              <AddressContainer\n                container\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={1}\n                justify=\"flex-end\"\n              >\n                <Grid item>\n                  <Typography variant=\"subtitle1\">\n                    {toShortAddress(account)}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <StatusDot />\n                </Grid>\n              </AddressContainer>\n            ) : (\n              <Button color=\"secondary\" variant=\"outlined\" onClick={connect}>\n                Connect Wallet\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </StyledToolbar>\n    </StyledAppBar>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/reducer.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/dao-info/reducer.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/theme/index.ts",["200","201","202","203","204"],"import { createMuiTheme } from \"@material-ui/core/styles\";\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1C1F23\",\n      light: \"#fff\",\n    },\n    secondary: {\n      main: \"#81FEB7\",\n    },\n    text: {\n      primary: \"#000000\",\n      secondary: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto Mono\",\n    h1: {\n      fontSize: 35,\n      letterSpacing: \"-0.01em\",\n    },\n    subtitle1: {\n      fontSize: 16,\n      fontWeight: 400,\n      lineHeight: \"146.3%\",\n      letterSpacing: \"-0.01em\",\n    },\n    subtitle2: {\n      fontSize: 16,\n      fontWeight: 400,\n    },\n    h3: {\n      fontSize: 35,\n      fontWeight: 400,\n      fontFamily: \"Roboto\",\n    },\n    h2: {\n      color: \"#000000\",\n      fontSize: 25,\n      fontWeight: 500,\n    },\n    h4: {\n      fontSize: 20,\n    },\n    h5: {\n      fontSize: 35,\n      lineHeight: \"146.3%\",\n    },\n    body1: {\n      fontSize: 16,\n    },\n    body2: {\n      fontSize: 16,\n      fontWeight: 300,\n      lineHeight: \"413.4%\",\n      opacity: 0.8,\n    },\n  },\n  overrides: {\n    MuiSlider: {\n      root: {\n        color: \"#3D3D3D\",\n      },\n    },\n    MuiStepLabel: {\n      label: {\n        color: \"#fff\",\n        opacity: 0.5,\n      },\n      active: {\n        color: \"#fff !important\",\n        opacity: 1,\n      },\n      completed: {\n        color: \"#fff !important\",\n        opacity: 0.5,\n      },\n    },\n    MuiStepConnector: {\n      lineVertical: {\n        display: \"none\",\n      },\n    },\n    MuiStepContent: {\n      root: {\n        borderLeft: \"none\",\n      },\n    },\n    MuiStep: {\n      root: {\n        marginBottom: 15,\n      },\n    },\n    MuiStepIcon: {\n      active: {\n        color: \"#1C1F23 !important\",\n      },\n      completed: {\n        color: \"#fff !important\",\n      },\n      root: {\n        color: \"#1C1F23\",\n        border: \"1px solid #3D3D3D\",\n        borderRadius: \"50%\",\n        \"&$active\": {\n          fill: \"#fff\",\n          border: \"1px solid #3D3D3D\",\n          borderRadius: \"50%\",\n          \"& $text\": {\n            fill: \"#1C1F23\",\n            border: \"1px solid #3D3D3D\",\n          },\n        },\n      },\n      text: {\n        fill: \"#fff\",\n      },\n    },\n    MuiInput: {\n      underline: {\n        \"&:before\": {\n          borderBottom: \"none\",\n          transition: \"none\",\n        },\n        \"&:after\": {\n          borderBottom: \"none\",\n          transition: \"none\",\n        },\n      },\n    },\n    MuiInputBase: {\n      input: {\n        textAlign: \"center\",\n        color: \"#fff\",\n      },\n    },\n    MuiDivider: {\n      root: {\n        marginTop: 16,\n        marginBottom: 16,\n      },\n    },\n    MuiDialog: {\n      paper: {\n        background: \"#1C1F23\"\n      },\n      root: {\n        minHeight: 600,\n        height: \"auto\",\n      },\n      paperWidthSm: {\n        minHeight: 600,\n        height: \"auto\"\n      }\n    },\n    MuiFormControl: {\n      root: {\n        width: \"100%\",\n      },\n    },\n    MuiDialogContent: {\n      root: {\n        padding: 0\n      }\n    },\n    MuiSwitch: {\n      root: {\n        width: 75,\n        height: 50,\n      },\n      switchBase: {\n        color: \"red\",\n        top: 8,\n        left: 8,\n        \"$checked$checked + &\": {\n          opacity: 1,\n          backgroundColor: \"#1C1F23\",\n          color: \"#81FEB7\",\n        },\n      },\n      track: {\n        borderRadius: \"40px\",\n        backgroundColor: \"inherit\",\n        border: \"1px solid #fff\",\n        opacity: 0.5,\n        \"$checked$checked + &\": {\n          opacity: 1,\n          backgroundColor: \"#1C1F23\",\n          color: \"#81FEB7\",\n        },\n      },\n      thumb: {\n        width: 18,\n        height: 18,\n        \"$checked$checked + &\": {\n          color: \"#81FEB7\",\n        },\n      },\n      colorSecondary: {\n        color: \"#fff\",\n        \"$checked$checked + &\": {\n          color: \"#81FEB7\",\n        },\n        \"& .Mui-checked\": {\n          color: \"#81FEB7\",\n        },\n      },\n    },\n    MuiFormHelperText: {\n      root: {\n        display: \"none\",\n      },\n    },\n  },\n});\n","/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/hook.ts",["205","206"],"import { useDispatch } from \"react-redux\";\nimport React, { useCallback, useContext } from \"react\";\nimport { connectWithBeacon } from \"./connectors\";\nimport { AppDispatch } from \"..\";\nimport { updateConnectedAccount } from \"./action\";\nimport { TezosToolkitContext } from \"./context\";\n\nexport const useConnectWallet = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { tezosToolkit, setTezosToolkit } = useContext(TezosToolkitContext);\n\n  return {\n    tezos: tezosToolkit,\n    connect: useCallback(async () => {\n      const tezos = await connectWithBeacon();\n      const account = await tezos.wallet.pkh();\n\n      dispatch(\n        updateConnectedAccount({\n          address: account,\n        })\n      );\n\n      if (setTezosToolkit) {\n        setTezosToolkit(tezos);\n      }\n    }, [dispatch, setTezosToolkit]),\n  };\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/utils.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/DAO.tsx",["207","208","209","210","211","212"],"import { Box, Grid, IconButton, styled, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport HouseIcon from \"../../../assets/logos/house.svg\";\nimport VotingIcon from \"../../../assets/logos/voting.svg\";\nimport VotingPeriodIcon from \"../../../assets/logos/votingPeriod.svg\";\nimport VoteTimeIcon from \"../../../assets/logos/voteTime.svg\";\nimport {\n  ProposalTableRow,\n  ProposalTableRowData,\n} from \"../components/ProposalTableRow\";\n\nconst SideBar = styled(Grid)({\n  width: 102,\n  borderRight: \"2px solid #3D3D3D\",\n});\n\nconst MainContainer = styled(Grid)({\n  minHeight: 325,\n  padding: \"40px 112px\",\n  borderBottom: \"2px solid #3D3D3D\",\n});\n\nconst SidebarButton = styled(IconButton)({\n  paddingTop: 32,\n  width: \"100%\",\n});\n\nconst PageLayout = styled(Grid)(({ theme }) => ({\n  background: theme.palette.primary.main,\n  minHeight: \"calc(100vh - 102px)\",\n}));\n\nconst DAOInfoTitleAndDesc = styled(Grid)({\n  maxWidth: 600,\n  marginBottom: 40,\n});\n\nconst DAOInfoVotingPeriod = styled(Grid)({\n  minWidth: 320,\n});\n\nconst BigIconContainer = styled(Box)({\n  width: 112,\n\n  \"& > img\": {\n    display: \"block\",\n    margin: \"auto\",\n  },\n});\n\nconst StatsContainer = styled(Grid)({\n  height: 175,\n  borderBottom: \"2px solid #3D3D3D\",\n});\n\nconst StatsBox = styled(Grid)({\n  borderRight: \"2px solid #3D3D3D\",\n  width: \"unset\",\n});\n\nconst TokensLocked = styled(StatsBox)({\n  padding: \"0 50px 0 112px\",\n});\n\nconst VotingAddresses = styled(StatsBox)({\n  minWidth: 250,\n});\n\nconst ActiveProposals = styled(StatsBox)({\n  paddingLeft: \"42px\",\n});\n\nconst LockedTokensBar = styled(LinearProgress)({\n  width: \"100%\",\n  \"&.MuiLinearProgress-colorSecondary\": {\n    background: \"#3D3D3D\",\n  },\n});\n\nconst TableContainer = styled(Box)({\n  width: \"100%\",\n  padding: \"72px 112px\",\n  paddingBottom: 30,\n  boxSizing: \"border-box\",\n});\n\nconst TableHeader = styled(Grid)({\n  borderBottom: \"2px solid #3D3D3D\",\n  paddingBottom: 20,\n});\n\nconst ProposalsContainer = styled(Grid)({\n  paddingBottom: 72\n});\n\nconst UnderlineText = styled(Typography)({\n  textDecoration: \"underline\",\n  cursor: \"pointer\",\n});\n\nconst ProposalTableHeadText: React.FC = ({ children }) => (\n  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n    {children}\n  </Typography>\n);\n\nconst proposals: ProposalTableRowData[] = [\n  {\n    title: \"Contribute to the fund\",\n    number: 43,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"success\",\n  },\n  {\n    title: \"Contribute to the fund\",\n    number: 42,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"warning\",\n  },\n  {\n    title: \"Contribute to the fund\",\n    number: 41,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"danger\",\n  },\n];\n\nexport const DAO = () => {\n  const match = useRouteMatch();\n\n  const history = useHistory();\n\n  return (\n    <PageLayout container wrap=\"nowrap\">\n      <SideBar item>\n        <SidebarButton>\n          <img src={HouseIcon} />\n        </SidebarButton>\n        <SidebarButton>\n          <img src={VotingIcon} />\n        </SidebarButton>\n      </SideBar>\n      <Grid item xs>\n        <MainContainer container justify=\"space-between\">\n          <DAOInfoTitleAndDesc item>\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"secondary\">\n                TEZDAO\n              </Typography>\n            </Box>\n            <Box paddingBottom=\"20px\">\n              <Typography variant=\"h1\" color=\"textSecondary\">\n                TezDAO\n              </Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                The TezDAO was founded as a partnership between some of the most\n                known Tezos Influencers. The purpose of this DAO is to manage a\n                treasury of funds to further the organization’s goals.\n              </Typography>\n            </Box>\n          </DAOInfoTitleAndDesc>\n          <DAOInfoVotingPeriod item>\n            <Box paddingBottom=\"32px\">\n              <Grid container>\n                <Grid item>\n                  <BigIconContainer>\n                    <img src={VotingPeriodIcon} />\n                  </BigIconContainer>\n                </Grid>\n                <Grid item>\n                  <Box paddingLeft=\"35px\">\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"secondary\">\n                        PERIOD\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h3\" color=\"textSecondary\">\n                        Voting\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box paddingBottom=\"32px\">\n              <Grid container>\n                <Grid item>\n                  <BigIconContainer>\n                    <img src={VoteTimeIcon} />\n                  </BigIconContainer>\n                </Grid>\n                <Grid item>\n                  <Box paddingLeft=\"35px\">\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"secondary\">\n                        TIME LEFT TO VOTE\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h3\" color=\"textSecondary\">\n                        5d 2m 3h\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </DAOInfoVotingPeriod>\n        </MainContainer>\n        <StatsContainer container>\n          <TokensLocked\n            item\n            xs={6}\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <Box>\n                  <Typography variant=\"subtitle2\" color=\"secondary\">\n                    MGTO Locked\n                  </Typography>\n                </Box>\n                <Box padding=\"12px 0\">\n                  <Typography variant=\"h3\" color=\"textSecondary\">\n                    21,202\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" color=\"secondary\">\n                  View\n                </Typography>\n              </Grid>\n            </Grid>\n            <LockedTokensBar\n              variant=\"determinate\"\n              value={60}\n              color=\"secondary\"\n            />\n          </TokensLocked>\n          <VotingAddresses\n            item\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"secondary\">\n                Voting Addresses\n              </Typography>\n              <Typography variant=\"h3\" color=\"textSecondary\">\n                215\n              </Typography>\n            </Box>\n          </VotingAddresses>\n          <ActiveProposals\n            item\n            xs\n            container\n            direction=\"column\"\n            justify=\"center\"\n          >\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"secondary\">\n                Active Proposals\n              </Typography>\n              <Typography variant=\"h3\" color=\"textSecondary\">\n                5\n              </Typography>\n            </Box>\n          </ActiveProposals>\n        </StatsContainer>\n        <TableContainer>\n          <TableHeader container wrap=\"nowrap\">\n            <Grid item xs={5}>\n              <ProposalTableHeadText>ACTIVE PROPOSALS</ProposalTableHeadText>\n            </Grid>\n            <Grid item xs={2}>\n              <ProposalTableHeadText>CYCLE</ProposalTableHeadText>\n            </Grid>\n            <Grid item xs={5}>\n              <ProposalTableHeadText>STATUS</ProposalTableHeadText>\n            </Grid>\n          </TableHeader>\n          {proposals.map((proposal, i) => (\n            <ProposalTableRow key={`proposal-${i}`} {...proposal} />\n          ))}\n        </TableContainer>\n        <ProposalsContainer container direction=\"row\" alignItems=\"center\" justify=\"center\">\n          <UnderlineText color=\"textSecondary\" variant=\"subtitle1\" align=\"center\" onClick={() => history.push(\"/explorer/proposals\")}>\n              VIEW ALL PROPOSALS\n          </UnderlineText>\n        </ProposalsContainer>\n      </Grid>\n    </PageLayout>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/Treasury.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/index.tsx",["213","214","215","216","217","218","219","220","221","222","223"],"import {\n  Grid,\n  Paper,\n  Step,\n  StepLabel,\n  Stepper,\n  styled,\n  Typography,\n  withTheme,\n} from \"@material-ui/core\";\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { ConnectWallet } from \"./ConnectWallet\";\nimport { Governance } from \"./Governance\";\nimport { SelectTemplate } from \"./SelectTemplate\";\nimport { TokenSettings } from \"./TokenSettings\";\nimport { DaoSettings } from \"./DaoSettings\";\nimport { Summary } from \"./Summary\";\nimport { Review } from \"./Review\";\nimport { useHistory } from \"react-router-dom\";\nimport { useConnectWallet } from \"../../store/wallet/hook\";\nimport ProgressBar from \"react-customizable-progressbar\";\nimport { TokenHolders } from \"../../store/dao-info/types\";\nimport { useOriginate } from \"../../hooks/useOriginate\";\n\nconst PageContainer = styled(withTheme(Grid))((props) => ({\n  background: props.theme.palette.primary.main,\n  minHeight: \"100%\",\n}));\n\nconst StepContentContainer = styled(Grid)({\n  paddingLeft: \"16%\",\n  paddingRight: \"16%\",\n  alignItems: \"center\",\n  height: \"inherit\",\n  overflow: \"scroll\",\n});\n\nconst StepOneContentContainer = styled(Grid)({\n  paddingLeft: \"16%\",\n  paddingRight: \"16%\",\n  alignItems: \"center\",\n});\n\nconst Footer = styled(withTheme(Grid))((props) => ({\n  boxShadow: \"none\",\n  background: props.theme.palette.primary.main,\n  height: \"inherit\",\n  paddingTop: \"1%\",\n  borderTop: \"2px solid #3D3D3D\",\n  marginLeft: \"24.85%\",\n  borderLeft: \"2px solid #3D3D3D\",\n}));\n\nconst BackButton = styled(Paper)({\n  boxShadow: \"none\",\n  width: \"121px\",\n  height: 31,\n  background: \"inherit\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  marginLeft: \"4%\",\n  paddingTop: \"1%\",\n  cursor: \"pointer\",\n});\n\nconst NextButton = styled(Paper)({\n  boxShadow: \"none\",\n  minWidth: \"121px\",\n  height: 31,\n  borderRadius: 21,\n  textAlign: \"center\",\n  paddingTop: \"1%\",\n  background: \"inherit\",\n  float: \"right\",\n  marginRight: \"4%\",\n  cursor: \"pointer\",\n  paddingLeft: \"3%\",\n  paddingRight: \"3%\",\n});\n\nconst WhiteText = styled(withTheme(Typography))((props) => ({\n  color: props.theme.palette.secondary.main,\n}));\n\nconst StyledStepper = styled(withTheme(Stepper))((props) => ({\n  background: \"inherit\",\n}));\n\nconst StepContentHeigth = styled(Grid)({\n  height: \"80vh\",\n});\n\nconst ContentContainer = styled(Grid)({\n  height: \"inherit\",\n  overflowY: \"scroll\",\n  alignItems: \"center\",\n  display: \"flex\",\n});\n\nconst IndicatorValue = styled(withTheme(Paper))((props) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  position: \"absolute\",\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  margin: \"0 auto\",\n  fontSize: 25,\n  color: props.theme.palette.text.secondary,\n  userSelect: \"none\",\n  boxShadow: \"none\",\n  background: \"inherit\",\n  fontFamily: \"Roboto Mono\",\n}));\n\nconst ProgressContainer = styled(Grid)({\n  borderRight: \"2px solid #3D3D3D\",\n});\n\nconst STEPS = [\n  \"Select template\",\n  \"Configure template\",\n  \"Review information\",\n  \"Launch organization\",\n];\n\nconst metadataCarrierParams = {\n  keyName: \"jaja\",\n  metadata: {\n    frozenToken: {\n      name: \"J\",\n      symbol: \"JAJA\",\n      decimals: 18,\n    },\n    unfrozenToken: {\n      name: \"J\",\n      symbol: \"JAJA\",\n      decimals: 18,\n    },\n  },\n};\n\nexport const DAOCreate: React.FC = () => {\n  const [\n    originateMetaData,\n    { loading: loadingMetadataContract, data: carrierData },\n  ] = useOriginate(\"MetadataCarrier\", metadataCarrierParams);\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [governanceStep, setGovernanceStep] = useState(0);\n  const [handleNextStep, setHandleNextStep] = useState(() => undefined);\n  const account = useSelector<AppState, AppState[\"wallet\"][\"address\"]>(\n    (state) => state.wallet.address\n  );\n  const [progress, setProgress] = useState(0.5);\n\n  const daoInfo = useSelector<AppState, AppState[\"saveDaoInformationReducer\"]>(\n    (state) => state.saveDaoInformationReducer\n  );\n  const membersTokenAllocation = daoInfo.token_holders.map(\n    (holder: TokenHolders) => {\n      return {\n        address: holder.token_holder,\n        amount: holder.balance.toString(),\n        tokenId: \"1\",\n      };\n    }\n  );\n\n  const [\n    originateTreasury,\n    { loading: loadingTrasuryData, data: treasuryData },\n  ] = useOriginate(\"Treasury\", {\n    storage: {\n      membersTokenAllocation,\n      adminAddress: daoInfo.administrator,\n      frozenScaleValue: 1,\n      frozenExtraValue: 0,\n      slashScaleValue: 1,\n      slashDivisionValue: 1,\n      minXtzAmount: 1,\n      maxXtzAmount: daoInfo.max_agent!,\n      maxProposalSize: 100,\n      quorumTreshold: 4,\n      votingPeriod:\n        daoInfo.voting_hours! * 3600 +\n        daoInfo.voting_days! * 24 * 3600 +\n        daoInfo.voting_minutes! * 60,\n    },\n    metadataCarrierDeploymentData: {\n      deployAddress: carrierData ? carrierData.address : \"\",\n      keyName: \"jaja\",\n    },\n  });\n\n  useEffect(() => {\n    console.log(\"loading data \", loadingTrasuryData);\n    if (treasuryData) {\n      console.log(\"trasury data \", treasuryData);\n    }\n  }, [loadingTrasuryData, treasuryData]);\n\n  const handleStep = () => {\n    if (activeStep === 3) {\n      originateMetaData();\n    }\n\n    setActiveStep(activeStep + 1);\n  };\n\n  useEffect(() => {\n    if (carrierData) {\n      originateTreasury();\n    }\n  }, [carrierData]);\n\n  const history = useHistory<any>();\n\n  function getStepContent(step: number, handleNextStep: any) {\n    switch (step) {\n      case 0:\n        return (\n          <SelectTemplate\n            setActiveStep={setActiveStep}\n            setProgress={setProgress}\n          />\n        );\n      case 1:\n        return governanceStep === 0 ? (\n          <Governance\n            setProgress={setProgress}\n            defineSubmit={setHandleNextStep}\n            setActiveStep={setActiveStep}\n            setGovernanceStep={setGovernanceStep}\n          />\n        ) : governanceStep === 1 ? (\n          <DaoSettings\n            defineSubmit={setHandleNextStep}\n            setActiveStep={setActiveStep}\n          />\n        ) : null;\n      case 2:\n        return (\n          <TokenSettings\n            setProgress={setProgress}\n            defineSubmit={setHandleNextStep}\n            setActiveStep={setActiveStep}\n          />\n        );\n      case 3:\n        return (\n          <Summary\n            setProgress={setProgress}\n            setActiveStep={setActiveStep}\n            setGovernanceStep={setGovernanceStep}\n          />\n        );\n      case 4:\n        return <Review setProgress={setProgress} />;\n    }\n  }\n\n  const handleBackStep = () => {\n    if (activeStep === 1 && governanceStep === 0) {\n      return setActiveStep(0);\n    } else if (activeStep === 1 && governanceStep !== 0) {\n      return setGovernanceStep(governanceStep - 1);\n    } else if (activeStep === 0) {\n      history.push(\"/explorer\");\n    } else if (activeStep === 3 || activeStep === 2) {\n      return setActiveStep(activeStep - 1);\n    }\n  };\n\n  const { tezos } = useConnectWallet();\n\n  return (\n    <PageContainer container direction=\"row\">\n      <ProgressContainer\n        item\n        xs={3}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n      >\n        <ProgressBar\n          progress={progress}\n          radius={62}\n          strokeWidth={4}\n          strokeColor={\"#81FEB7\"}\n          trackStrokeWidth={2}\n          trackStrokeColor={\"#3d3d3d\"}\n        >\n          <div className=\"indicator\">\n            <IndicatorValue>{progress === 0.5 ? 0 : progress}%</IndicatorValue>\n          </div>\n        </ProgressBar>\n\n        <StyledStepper activeStep={activeStep} orientation=\"vertical\">\n          {STEPS.map((label, index) => (\n            <Step key={label} {...(!account && { active: false })}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </StyledStepper>\n      </ProgressContainer>\n\n      <StepContentHeigth item xs={9} container>\n        <ContentContainer item xs={11}>\n          {account ? (\n            <StepContentContainer item container justify=\"center\">\n              {getStepContent(activeStep, handleNextStep)}\n            </StepContentContainer>\n          ) : (\n            <StepOneContentContainer item container justify=\"center\">\n              <ConnectWallet />\n            </StepOneContentContainer>\n          )}\n        </ContentContainer>\n      </StepContentHeigth>\n      {account && activeStep !== 3 && activeStep !== 4 ? (\n        <Footer\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={6}>\n            <BackButton onClick={handleBackStep}>\n              <Typography>BACK </Typography>{\" \"}\n            </BackButton>\n          </Grid>\n\n          {activeStep === 1 || activeStep === 2 ? (\n            <Grid item xs={6}>\n              <NextButton onClick={handleNextStep}>\n                {\" \"}\n                <WhiteText>CONTINUE</WhiteText>\n              </NextButton>\n            </Grid>\n          ) : null}\n        </Footer>\n      ) : null}\n\n      {!account ? (\n        <Footer\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={6}>\n            <BackButton onClick={() => history.push(\"/explorer\")}>\n              <Typography>BACK </Typography>{\" \"}\n            </BackButton>\n          </Grid>\n        </Footer>\n      ) : null}\n\n      {activeStep === 3 ? (\n        <Footer\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={6}>\n            <BackButton onClick={handleBackStep}>\n              <Typography>BACK</Typography>{\" \"}\n            </BackButton>\n          </Grid>\n          <Grid item xs={6}>\n            <NextButton onClick={handleStep}>\n              {\" \"}\n              <WhiteText>{\"LAUNCH\"}</WhiteText>\n            </NextButton>\n          </Grid>\n        </Footer>\n      ) : null}\n    </PageContainer>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/List.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/action.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/dao-info/action.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/wallet/connectors.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/mock/mock.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Review.tsx",["224"],"import { Grid, Paper, styled, Typography } from \"@material-ui/core\";\nimport Rocket from \"../../assets/img/rocket.svg\";\nimport React from \"react\";\n\nconst RocketImg = styled(\"img\")({\n  marginBottom: 46,\n});\n\nconst WaitingText = styled(Typography)({\n  marginTop: 9,\n});\n\nexport const Review: React.FC<{ setProgress: any }> = ({ setProgress }) => {\n  setProgress(100);\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n        style={{ height: \"fit-content\" }}\n      >\n        <Grid item xs={12}>\n          <RocketImg src={Rocket} alt=\"rocket\" />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" color=\"textSecondary\">\n            Deploying <strong> My Great Token </strong> to the Tezos Network\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <WaitingText variant=\"subtitle1\" color=\"textSecondary\">\n            Waiting for confirmation...\n          </WaitingText>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Summary.tsx",["225","226","227","228","229","230","231","232","233"],"import { Grid, Paper, styled, Typography, withTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { TokenHolders } from \"../../store/dao-info/types\";\nimport { TokenHoldersRow } from \"../daoexplorer/components/TokenHoldersRow\";\n\ninterface Props {\n  setActiveStep: any;\n  setGovernanceStep: any;\n  setProgress: any;\n}\n\nconst CustomUrlButton = styled(withTheme(Paper))((props) => ({\n  border: \"none\",\n  background: \"inherit\",\n  width: 69,\n  height: 31,\n  boxSizing: \"border-box\",\n  borderRadius: 21,\n  cursor: \"pointer\",\n  boxShadow: \"none\",\n  textAlign: \"center\",\n  marginLeft: \"12px\",\n  padding: 5,\n  color: props.theme.palette.secondary.main,\n  fontFamily: \"system-ui\",\n}));\n\nconst CustomTypography = styled(Typography)({\n  marginTop: 10,\n});\n\nconst SecondContainer = styled(Grid)({\n  marginTop: 25,\n});\n\nconst CustomColumnContainer = styled(Grid)({\n  borderLeft: \"1px solid #3D3D3D\",\n  marginTop: 25,\n});\n\nconst CustomSettingsContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  marginTop: 25,\n  padding: 25,\n});\n\nconst CustomGridItem = styled(Grid)({\n  paddingLeft: 27,\n  marginBottom: 12,\n});\n\nconst CustomItalic = styled(Typography)({\n  fontStyle: \"italic\",\n  fontWeight: 300,\n  fontSize: 14,\n  paddingBottom: 12,\n  borderBottom: \"1px solid #3D3D3D\",\n  color: \"#fff\",\n  opacity: 0.5,\n});\n\nconst CustomItalicAdmin = styled(Typography)({\n  fontStyle: \"italic\",\n  fontWeight: 300,\n  fontSize: 14,\n  marginTop: 13,\n});\n\nconst CustomItalicAdminText = styled(Typography)({\n  fontStyle: \"italic\",\n  fontWeight: 300,\n  fontSize: 14,\n  marginTop: 13,\n  marginRight: 4,\n  color: \"#fff\",\n  opacity: 0.5,\n});\n\nconst CustomToken = styled(Typography)({\n  color: \"#fff\",\n  textAlign: \"end\",\n});\n\nconst AddressContainer = styled(Grid)({\n  maxHeight: 212,\n  overflowY: \"scroll\",\n});\n\nconst TitleSpacing = styled(Typography)({\n  marginTop: 12,\n});\n\nconst ContainerSpacing = styled(Typography)({\n  marginTop: 24,\n});\n\nconst ContainerSpacingButton = styled(Typography)({\n  marginTop: 24,\n  cursor: \"pointer\",\n});\n\nconst ContainerButton = styled(Typography)({\n  paddingBottom: 8,\n  marginTop: 24,\n  borderBottom: \"1px solid #3D3D3D\",\n});\n\nconst AdminContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  marginTop: 16,\n  padding: \"16px 18px\",\n});\n\nconst AdminAddress = styled(Typography)({\n  wordBreak: \"break-all\",\n});\n\nconst UnderlinedGrid = styled(Grid)({\n  borderBottom: \"1px solid #3D3D3D\",\n  padding: 2,\n});\n\nexport const Summary: React.FC<Props> = (props) => {\n  const { setActiveStep, setGovernanceStep, setProgress } = props;\n\n  const storageDaoInformation = useSelector<\n    AppState,\n    AppState[\"saveDaoInformationReducer\"]\n  >((state) => state.saveDaoInformationReducer);\n\n  setProgress(75);\n\n  const goToVoting = () => {\n    setGovernanceStep(0);\n    setActiveStep(1);\n  };\n\n  const goToSettings = () => {\n    // setGovernanceStep(1);\n    setActiveStep(2);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        style={{ height: \"fit-content\" }}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            Review information\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <CustomTypography variant=\"body1\" color=\"textSecondary\">\n            Review your settings to ensure you’ve made the correct choices.\n          </CustomTypography>\n        </Grid>\n\n        <SecondContainer container direction=\"row\">\n          <Grid item xs={12}>\n            <TitleSpacing color=\"secondary\" variant=\"subtitle1\">\n              {storageDaoInformation.token_symbol}\n            </TitleSpacing>\n          </Grid>\n          <Grid item xs={12}>\n            <TitleSpacing color=\"textSecondary\" variant=\"h3\">\n              {storageDaoInformation.token_name}\n            </TitleSpacing>\n          </Grid>\n          <Grid item xs={12}>\n            <TitleSpacing color=\"textSecondary\" variant=\"body1\">\n              {storageDaoInformation.description}\n            </TitleSpacing>\n          </Grid>\n        </SecondContainer>\n\n        <SecondContainer container direction=\"row\">\n          <Grid item xs={6}>\n            <ContainerSpacing color=\"textSecondary\" variant=\"subtitle1\">\n              TOKEN SETTINGS\n            </ContainerSpacing>\n          </Grid>\n          <Grid item xs={6}>\n            <ContainerSpacingButton\n              color=\"secondary\"\n              variant=\"subtitle1\"\n              align=\"right\"\n              onClick={goToSettings}\n            >\n              EDIT\n            </ContainerSpacingButton>\n          </Grid>\n\n          <Grid item xs={12}>\n            <AdminContainer container direction=\"row\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  Administrator\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <AdminAddress\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"right\"\n                >\n                  {storageDaoInformation.administrator}\n                </AdminAddress>\n              </Grid>\n            </AdminContainer>\n          </Grid>\n          {storageDaoInformation.token_holders.map(\n            (holder: TokenHolders, i: number) => {\n              return <TokenHoldersRow key={`holder-${i}`} {...holder} />;\n            }\n          )}\n        </SecondContainer>\n\n        <SecondContainer container direction=\"row\">\n          <Grid item xs={12}>\n            <ContainerButton\n              color=\"secondary\"\n              variant=\"subtitle1\"\n              align=\"right\"\n              onClick={goToVoting}\n            >\n              EDIT\n            </ContainerButton>\n          </Grid>\n          <Grid item xs={12}>\n            <UnderlinedGrid item container direction=\"row\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Transfers locked?\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"right\"\n                >\n                  {storageDaoInformation.lock_disabled ? \"YES\" : \"NO\"}\n                </Typography>\n              </Grid>\n            </UnderlinedGrid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <UnderlinedGrid item container direction=\"row\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Minimum Stake\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"right\"\n                >\n                  {storageDaoInformation.min_stake}%\n                </Typography>\n              </Grid>\n            </UnderlinedGrid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <UnderlinedGrid item container direction=\"row\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Proposal Period Duration\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"right\"\n                >\n                  {storageDaoInformation.voting_days}d{\" \"}\n                  {storageDaoInformation.proposal_hours}h{\" \"}\n                  {storageDaoInformation.proposal_minutes}m\n                </Typography>\n              </Grid>\n            </UnderlinedGrid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <UnderlinedGrid item container direction=\"row\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Voting Period Duration\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"textSecondary\"\n                  align=\"right\"\n                >\n                  {storageDaoInformation.voting_days}d{\" \"}\n                  {storageDaoInformation.voting_hours}h{\" \"}\n                  {storageDaoInformation.voting_minutes}m\n                </Typography>\n              </Grid>\n            </UnderlinedGrid>\n          </Grid>\n        </SecondContainer>\n      </Grid>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/TokenSettings.tsx",["234","235"],"import {\n  Grid,\n  styled,\n  Typography,\n  withStyles,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { saveDaoInformation } from \"../../store/dao-info/action\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport { TextField as FormikTextField } from \"formik-material-ui\";\nimport { TokenHolders } from \"../../store/dao-info/types\";\n\ninterface Values {\n  max_agent: number | undefined;\n  administrator: string | undefined;\n  token_holders: Array<TokenHolders>;\n}\n\nconst CustomTypography = styled(Typography)({\n  paddingBottom: 21,\n  borderBottom: \"1px solid #3D3D3D\",\n  marginTop: 10,\n  marginBottom: 14,\n});\n\nconst SecondContainer = styled(Grid)({\n  marginTop: 25,\n});\n\nconst CustomInputContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  height: 62,\n  marginTop: 14,\n  padding: \"18px 21px\",\n  boxSizing: \"border-box\",\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n});\n\nconst CustomBalanceContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  height: 62,\n  marginTop: 14,\n  borderLeft: \"none\",\n  padding: \"18px 21px\",\n  boxSizing: \"border-box\",\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n});\n\nconst ErrorText = styled(Typography)({\n  fontSize: 10,\n  color: \"red\",\n  marginTop: 10,\n});\n\nconst CustomFormikTextField = withStyles({\n  root: {\n    \"& .MuiInput-root\": {\n      fontWeight: 300,\n      textAlign: \"initial\",\n    },\n    \"& .MuiInputBase-input\": {\n      textAlign: \"initial\",\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottom: \"none !important\",\n    },\n    \"& .MuiInput-underline:hover:before\": {\n      borderBottom: \"none !important\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottom: \"none !important\",\n    },\n  },\n})(FormikTextField);\n\nconst CustomTotalContainer = styled(Typography)({\n  padding: \"11px 21px\",\n  boxSizing: \"border-box\",\n});\n\nconst CustomValueContainer = styled(Typography)({\n  padding: \"11px 21px\",\n  boxSizing: \"border-box\",\n  fontWeight: 700,\n});\n\nconst AddButon = styled(\"button\")({\n  background: \"inherit\",\n  border: \"none\",\n  outline: \"none\",\n  marginTop: 8,\n  textAlign: \"end\",\n  width: \"100%\",\n  cursor: \"pointer\",\n  textDecoration: \"underline\",\n  color: \"#fff\",\n});\n\nconst TokenHoldersGrid = styled(Grid)({\n  maxHeight: 269,\n  overflowX: \"scroll\",\n});\n\nconst TokenSettingsForm = ({\n  values,\n  defineSubmit,\n  submitForm,\n  touched,\n  errors,\n}: any) => {\n  useMemo(() => {\n    defineSubmit(() => submitForm);\n  }, [values]);\n\n  const getTotal = () => {\n    let total = 0;\n    values.token_holders.forEach((holder: any) => {\n      total += holder.balance;\n      return;\n    });\n    return total;\n  };\n  return (\n    <>\n      <TokenHoldersGrid container direction=\"row\">\n        <Grid item xs={9}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Token holder{\" \"}\n          </Typography>\n\n          <FieldArray\n            name=\"token_holders\"\n            render={(arrayHelpers) => (\n              <>\n                {values.token_holders && values.token_holders.length > 0\n                  ? values.token_holders.map((holder: any, index: any) => (\n                      <div key={index}>\n                        {/* <Typography variant=\"subtitle1\"> Token holder </Typography> */}\n                        <CustomInputContainer>\n                          <Field\n                            type=\"text\"\n                            component={CustomFormikTextField}\n                            placeholder=\"0xf8s8d....\"\n                            name={`token_holders.${index}.token_holder`}\n                          />\n                          {/* {errors.token_holders &&\n                          errors.token_holders[index] &&\n                          touched.token_holders[index] ? (\n                            <ErrorText>{errors.token_holders[index]}</ErrorText>\n                          ) : null} */}\n                        </CustomInputContainer>\n                      </div>\n                    ))\n                  : null}\n              </>\n            )}\n          />\n        </Grid>\n\n        <Grid item xs={3}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Balance{\" \"}\n          </Typography>\n\n          <FieldArray\n            name=\"token_holders\"\n            render={(arrayHelpers) => (\n              <>\n                {values.token_holders && values.token_holders.length > 0\n                  ? values.token_holders.map((holder: any, index: any) => (\n                      <div key={index}>\n                        <CustomBalanceContainer>\n                          <Field\n                            type=\"number\"\n                            component={CustomFormikTextField}\n                            placeholder=\"0.00\"\n                            name={`token_holders.${index}.balance`}\n                          />\n                        </CustomBalanceContainer>\n                        {index + 1 === values.token_holders.length ? (\n                          <AddButon\n                            className=\"button\"\n                            type=\"button\"\n                            onClick={() =>\n                              arrayHelpers.insert(index + 1, {\n                                token_holder: \"\",\n                                balance: 0,\n                              })\n                            }\n                          >\n                            {\" \"}\n                            Add new row\n                          </AddButon>\n                        ) : null}\n                      </div>\n                    ))\n                  : null}\n              </>\n            )}\n          />\n        </Grid>\n      </TokenHoldersGrid>\n\n      <Grid container direction=\"row\">\n        <Grid item xs={9}>\n          <CustomTotalContainer variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Total{\" \"}\n          </CustomTotalContainer>\n        </Grid>\n        <Grid item xs={3}>\n          <CustomValueContainer color=\"textSecondary\">\n            {getTotal()}\n          </CustomValueContainer>\n        </Grid>\n      </Grid>\n\n      <SecondContainer item container direction=\"row\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Maximum Agent Spend Per Cycle{\" \"}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <CustomInputContainer>\n            <Field\n              component={CustomFormikTextField}\n              type=\"number\"\n              name=\"max_agent\"\n              placeholder=\"00\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">TKN</InputAdornment>\n                ),\n              }}\n            />\n          </CustomInputContainer>\n          {errors.max_agent && touched.max_agent ? (\n            <ErrorText>{errors.max_agent}</ErrorText>\n          ) : null}\n        </Grid>\n      </SecondContainer>\n\n      <SecondContainer item container direction=\"row\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Administrator{\" \"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <CustomInputContainer>\n            <Field\n              name=\"administrator\"\n              type=\"text\"\n              placeholder=\"0xf8s8d....\"\n              component={CustomFormikTextField}\n            ></Field>\n          </CustomInputContainer>\n          {errors.administrator && touched.administrator ? (\n            <ErrorText>{errors.administrator}</ErrorText>\n          ) : null}\n        </Grid>\n      </SecondContainer>\n    </>\n  );\n};\n\nexport const TokenSettings: React.FC<{\n  defineSubmit: any;\n  setActiveStep: any;\n  setProgress: any;\n}> = ({ defineSubmit, setActiveStep, setProgress }) => {\n  const storageDaoInformation = useSelector<\n    AppState,\n    AppState[\"saveDaoInformationReducer\"]\n  >((state) => state.saveDaoInformationReducer);\n\n  const dispatch = useDispatch();\n  setProgress(50);\n  const saveStepInfo = (values: any, { setSubmitting }: any) => {\n    setSubmitting(true);\n    dispatch(saveDaoInformation(values));\n    setActiveStep(3);\n  };\n\n  const validate = (values: Values) => {\n    const errors: any = {};\n\n    if (values.administrator === undefined || !String(values.administrator)) {\n      errors.administrator = \"Required\";\n    }\n\n    if (values.max_agent === undefined || !String(values.max_agent)) {\n      errors.max_agent = \"Required\";\n    }\n\n    // if (values.token_holders && values.token_holders.length > 0) {\n    //   values.token_holders.map((holder: any, index: any) => {\n    //     if (!holder.token_holder || !holder.balance) {\n    //       errors.token_holders = [];\n    //       return (errors.token_holders[index] = \"All fields are required\");\n    //     }\n    //   });\n    // }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        style={{ height: \"fit-content\" }}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            Distribution Settings\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <CustomTypography variant=\"subtitle1\" color=\"textSecondary\">\n            These settings will define the name, symbol, and initial\n            distribution of your token.\n          </CustomTypography>\n        </Grid>\n      </Grid>\n      <Formik\n        enableReinitialize={true}\n        validate={validate}\n        onSubmit={saveStepInfo}\n        initialValues={storageDaoInformation}\n      >\n        {({\n          submitForm,\n          isSubmitting,\n          setFieldValue,\n          values,\n          errors,\n          touched,\n        }) => {\n          return (\n            <Form style={{ width: \"100%\" }}>\n              <TokenSettingsForm\n                defineSubmit={defineSubmit}\n                validate={validate}\n                submitForm={submitForm}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                touched={touched}\n                values={values}\n              />\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/DaoSettings.tsx",["236"],"import {\n  Grid,\n  styled,\n  Typography,\n  withStyles,\n  TextareaAutosize,\n  withTheme,\n} from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { saveDaoInformation } from \"../../store/dao-info/action\";\nimport { Field, Form, Formik, getIn } from \"formik\";\nimport {\n  TextField as FormikTextField,\n  Switch as FormikSwitch,\n} from \"formik-material-ui\";\n\ninterface Values {\n  token_name: string | undefined;\n  token_symbol: string | undefined;\n  lock_disabled: boolean;\n  description: string;\n}\n\nconst CustomTypography = styled(Typography)({\n  paddingBottom: 21,\n  borderBottom: \"1px solid #3D3D3D\",\n  marginTop: 10,\n});\n\nconst SecondContainer = styled(Grid)({\n  marginTop: 25,\n});\n\nconst CustomInputContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  height: 62,\n  marginTop: 14,\n  padding: \"18px 21px\",\n  boxSizing: \"border-box\",\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n});\n\nconst CustomFormikTextField = withStyles({\n  root: {\n    \"& .MuiInput-root\": {\n      fontWeight: 300,\n      textAlign: \"initial\",\n    },\n    \"& .MuiInputBase-input\": {\n      textAlign: \"initial\",\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottom: \"none !important\",\n    },\n    \"& .MuiInput-underline:hover:before\": {\n      borderBottom: \"none !important\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottom: \"none !important\",\n    },\n  },\n})(FormikTextField);\n\nconst CustomTextarea = styled(withTheme(TextareaAutosize))((props) => ({\n  height: \"153px !important\",\n  width: \"100%\",\n  border: \"1px solid #3D3D3D\",\n  marginTop: 14,\n  fontWeight: 300,\n  padding: \"21px 20px\",\n  fontFamily: \"system-ui\",\n  fontSize: 16,\n  background: props.theme.palette.primary.main,\n  color: props.theme.palette.text.secondary,\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n}));\n\nconst ErrorText = styled(Typography)({\n  fontSize: 14,\n  color: \"red\",\n});\n\nconst DaoSettingsForm = ({\n  submitForm,\n  values,\n  defineSubmit,\n  setFieldValue,\n  errors,\n  touched,\n}: any) => {\n  useMemo(() => {\n    defineSubmit(() => submitForm);\n  }, [values]);\n\n  return (\n    <>\n      <SecondContainer container item direction=\"row\" spacing={2}>\n        <Grid item xs={9}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Token name{\" \"}\n          </Typography>\n          <CustomInputContainer>\n            <Field\n              name=\"token_name\"\n              type=\"text\"\n              placeholder=\"My Group’s Token\"\n              component={CustomFormikTextField}\n            ></Field>\n          </CustomInputContainer>\n          {errors.token_name && touched.token_name ? (\n            <ErrorText>{errors.token_name}</ErrorText>\n          ) : null}\n        </Grid>\n\n        <Grid item xs={3}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Token symbol{\" \"}\n          </Typography>\n          <CustomInputContainer>\n            <Field\n              name=\"token_symbol\"\n              type=\"text\"\n              placeholder=\"MYTOK\"\n              component={CustomFormikTextField}\n            ></Field>\n          </CustomInputContainer>\n          {errors.token_symbol && touched.token_symbol ? (\n            <ErrorText>{errors.token_symbol}</ErrorText>\n          ) : null}\n        </Grid>\n      </SecondContainer>\n      <SecondContainer container direction=\"row\" alignItems=\"center\">\n        <Field\n          name=\"lock_disabled\"\n          component={FormikSwitch}\n          type=\"checkbox\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Disable locking until after first voting period.\n        </Typography>\n      </SecondContainer>\n\n      <SecondContainer container direction=\"row\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Description\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Field name=\"description\">\n            {() => (\n              <CustomTextarea\n                maxLength={1500}\n                aria-label=\"empty textarea\"\n                placeholder=\"This is what we’re about...\"\n                value={getIn(values, \"description\")}\n                onChange={(newValue: any) => {\n                  setFieldValue(\"description\", newValue.target.value);\n                }}\n              />\n            )}\n          </Field>\n        </Grid>\n        {errors.description && touched.description ? (\n          <ErrorText>{errors.description}</ErrorText>\n        ) : null}\n      </SecondContainer>\n    </>\n  );\n};\nexport const DaoSettings: React.FC<{\n  defineSubmit: any;\n  setActiveStep: any;\n}> = ({ defineSubmit, setActiveStep }) => {\n  const storageDaoInformation = useSelector<\n    AppState,\n    AppState[\"saveDaoInformationReducer\"]\n  >((state) => state.saveDaoInformationReducer);\n\n  const dispatch = useDispatch();\n\n  const saveStepInfo = (values: any, { setSubmitting }: any) => {\n    setSubmitting(true);\n    dispatch(saveDaoInformation(values));\n    setActiveStep(2);\n  };\n\n  const validate = (values: Values) => {\n    const errors: any = {};\n\n    if (values.token_name === undefined || !String(values.token_name)) {\n      errors.token_name = \"Required\";\n    }\n    if (values.token_symbol === undefined || !String(values.token_symbol)) {\n      errors.token_symbol = \"Required\";\n    }\n    if (values.description === undefined || !String(values.description)) {\n      errors.description = \"Required\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        style={{ height: \"fit-content\" }}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            DAO Settings\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <CustomTypography variant=\"subtitle1\" color=\"textSecondary\">\n            These settings will define the name, symbol, and initial\n            distribution of your token.\n          </CustomTypography>\n        </Grid>\n      </Grid>\n\n      <Formik\n        enableReinitialize\n        validate={validate}\n        onSubmit={saveStepInfo}\n        initialValues={storageDaoInformation}\n      >\n        {({\n          submitForm,\n          isSubmitting,\n          setFieldValue,\n          values,\n          errors,\n          touched,\n        }) => {\n          return (\n            <Form style={{ width: \"100%\" }}>\n              <DaoSettingsForm\n                defineSubmit={defineSubmit}\n                validate={validate}\n                submitForm={submitForm}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                touched={touched}\n                values={values}\n              />\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/SelectTemplate.tsx",["237"],"import {\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n  styled,\n  Typography,\n  withTheme,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  setActiveStep: any;\n  setProgress: any;\n}\n\nconst CustomCard = styled(withTheme(Grid))((props) => ({\n  minHeight: 248,\n  boxShadow: \"none\",\n  background: props.theme.palette.primary.main,\n  border: \"1px solid #3D3D3D\",\n  boxSizing: \"border-box\",\n  borderRadius: \"0px\",\n  marginTop: 25,\n  \"&:first-child\": {\n    marginLeft: \"0px\",\n  },\n}));\n\nconst Circle = styled(Paper)({\n  background: \"#eeeeee\",\n  height: 70,\n  width: 70,\n  borderRadius: \"50%\",\n  boxShadow: \"none\",\n  marginBottom: 20,\n});\n\nconst FooterContainer = styled(withTheme(Paper))((props) => ({\n  boxShadow: \"none\",\n  background: props.theme.palette.primary.main,\n  height: 61,\n  borderRadius: 0,\n  alignItems: \"center\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  paddingRight: 29,\n  borderTop: \"1px solid #3D3D3D\",\n  cursor: \"pointer\",\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n}));\n\nconst CustomCardContent = styled(CardContent)({\n  padding: \"27px 37px 0px 37px\",\n  \"&:last-child\": {\n    paddingBottom: \"0px\",\n  },\n  minHeight: 168,\n});\n\nconst Phrase = styled(Typography)({\n  marginTop: 20,\n  marginBottom: 39,\n});\n\nconst Subtitle = styled(Typography)({\n  marginTop: 10,\n});\n\nexport const SelectTemplate: React.FC<Props> = (props) => {\n  const { setActiveStep, setProgress } = props;\n  setProgress(0);\n  return (\n    <>\n      <Grid container direction=\"row\">\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            Select template\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Phrase variant=\"subtitle1\" color=\"textSecondary\">\n            Create an organization by picking a template below.\n          </Phrase>\n        </Grid>\n\n        <Grid item container direction=\"row\" justify=\"space-between\">\n          <Grid item xs={6}>\n            <CustomCard>\n              <CustomCardContent>\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={12} sm={12} md={6} lg={4}>\n                    <Circle />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={6} lg={8}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                      Treasury\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Subtitle variant=\"subtitle1\" color=\"textSecondary\">\n                  Non-profits, Companies, Founders\n                </Subtitle>\n              </CustomCardContent>\n              <FooterContainer onClick={() => setActiveStep(1)}>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  USE TEMPLATE\n                </Typography>\n              </FooterContainer>\n            </CustomCard>\n          </Grid>\n          <Grid item xs={6}>\n            <CustomCard>\n              <CustomCardContent>\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={12} sm={12} md={6} lg={4}>\n                    <Circle />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={6} lg={8}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                      Registry\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Subtitle variant=\"subtitle1\" color=\"textSecondary\">\n                  Non-profits, Companies, Founders\n                </Subtitle>\n              </CustomCardContent>\n              <FooterContainer onClick={() => setActiveStep(1)}>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  USE TEMPLATE\n                </Typography>\n              </FooterContainer>\n            </CustomCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/Governance.tsx",["238"],"import {\n  Grid,\n  Paper,\n  styled,\n  Typography,\n  Slider,\n  withStyles,\n  withTheme,\n} from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { Field, Form, Formik, getIn } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { TextField } from \"formik-material-ui\";\nimport { saveDaoInformation } from \"../../store/dao-info/action\";\n\ninterface Values {\n  proposal_days: number | undefined;\n  proposal_hours: number | undefined;\n  proposal_minutes: number | undefined;\n  voting_days: number | undefined;\n  voting_hours: number | undefined;\n  voting_minutes: number | undefined;\n  min_stake: number | undefined;\n  propose_stake_mygt: number | undefined;\n  propose_stake_percentage: number | undefined;\n  vote_stake_mygt: number | undefined;\n  vote_stake_percentage: number | undefined;\n}\n\nconst CustomTypography = styled(Typography)({\n  paddingBottom: 10,\n  borderBottom: \"1px solid #3D3D3D\",\n  marginTop: 10,\n  marginBottom: 33,\n});\n\nconst ErrorText = styled(Typography)({\n  fontSize: 14,\n  color: \"red\",\n});\n\nconst SecondContainer = styled(Grid)({\n  marginTop: 10,\n});\n\nconst SpacingContainer = styled(Grid)({\n  marginTop: 25,\n});\n\nconst CustomInputContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  height: 62,\n  marginTop: 14,\n  \"&:first-child\": {\n    borderRight: \"none\",\n  },\n  \"&:last-child\": {\n    borderLeft: \"none\",\n  },\n});\n\nconst AdditionContainer = styled(Grid)({\n  border: \"1px solid #3D3D3D\",\n  height: 62,\n  marginTop: 14,\n});\n\nconst GridItemCenter = styled(Grid)({\n  textAlign: \"center\",\n});\n\nconst ItemContainer = styled(Grid)({\n  height: \"100%\",\n  padding: 12,\n  \"&:hover\": {\n    background: \"rgba(129, 254, 183, 0.03)\",\n    borderLeft: \"2px solid #81FEB7\",\n  },\n});\n\nconst Title = styled(Typography)({\n  marginLeft: 10,\n});\n\nconst StyledSlider = withStyles({\n  root: {\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  valueLabel: {\n    textAlign: \"center\",\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    top: \"24.5%\",\n    backgroundColor: \"#fff\",\n    border: \"3px solid #fff\",\n  },\n  track: {\n    backgroundColor: \"#4BCF93\",\n    borderRadius: \"4px\",\n    height: 2,\n  },\n})(Slider);\n\nconst CustomSliderValue = styled(withTheme(Paper))((props) => ({\n  boxShadow: \"none\",\n  height: 62,\n  border: \"1px solid #3D3D3D\",\n  borderRadius: 0,\n  background: props.theme.palette.primary.main,\n}));\n\nconst Value = styled(Typography)({\n  textAlign: \"center\",\n  padding: \"15%\",\n});\n\nconst LastElement = styled(Grid)({\n  marginBottom: 37,\n});\n\nconst styles = {\n  voting: {\n    marginTop: 6,\n  },\n};\n\nconst GridNoPadding = styled(Grid)({\n  padding: \"0px !important\",\n});\n\nconst GovernanceForm = ({\n  submitForm,\n  values,\n  defineSubmit,\n  setFieldValue,\n  errors,\n  touched,\n}: any) => {\n  useMemo(() => {\n    defineSubmit(() => submitForm);\n  }, [values]);\n\n  return (\n    <>\n      <SecondContainer container direction=\"row\">\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Proposal Period Duration\n        </Typography>\n      </SecondContainer>\n\n      <Grid container direction=\"row\">\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                color=\"textSecondary\"\n                name=\"proposal_days\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">days</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.proposal_days && touched.proposal_days ? (\n            <ErrorText>{errors.proposal_days}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"proposal_hours\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">hours</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.proposal_hours && touched.proposal_hours ? (\n            <ErrorText>{errors.proposal_hours}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"proposal_minutes\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">minutes</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.proposal_minutes && touched.proposal_minutes ? (\n            <ErrorText>{errors.proposal_minutes}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n      </Grid>\n\n      <SecondContainer container direction=\"row\">\n        <Typography\n          style={styles.voting}\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n        >\n          Voting Period Duration\n        </Typography>\n      </SecondContainer>\n\n      <Grid container direction=\"row\">\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"voting_days\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">days</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.voting_days && touched.voting_days ? (\n            <ErrorText>{errors.voting_days}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"voting_hours\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">hours</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.voting_hours && touched.voting_hours ? (\n            <ErrorText>{errors.voting_hours}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n        <CustomInputContainer item xs={4}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"voting_minutes\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">minutes</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.voting_minutes && touched.voting_minutes ? (\n            <ErrorText>{errors.voting_minutes}</ErrorText>\n          ) : null}\n        </CustomInputContainer>\n      </Grid>\n\n      <SecondContainer container direction=\"row\">\n        <Typography\n          style={styles.voting}\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n        >\n          Required Stake to Propose\n        </Typography>\n      </SecondContainer>\n\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <AdditionContainer item xs={3}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"propose_stake_mygt\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">MYGT</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.propose_stake_mygt && touched.propose_stake_mygt ? (\n            <ErrorText>{errors.propose_stake_mygt}</ErrorText>\n          ) : null}\n        </AdditionContainer>\n        <Grid item xs={1}>\n          <Grid item container justify=\"center\">\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              +\n            </Typography>\n          </Grid>\n        </Grid>\n        <AdditionContainer item xs={2}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={9}>\n              <Field\n                name=\"propose_stake_percentage\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={2}>\n              <Typography color=\"textSecondary\">%</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.propose_stake_percentage &&\n          touched.propose_stake_percentage ? (\n            <ErrorText>{errors.propose_stake_percentage}</ErrorText>\n          ) : null}\n        </AdditionContainer>\n        <Grid item xs={3}>\n          <Grid item container>\n            <Title variant=\"subtitle1\" color=\"textSecondary\">\n              of Proposal Value\n            </Title>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <SecondContainer container direction=\"row\">\n        <Typography\n          style={styles.voting}\n          variant=\"subtitle1\"\n          color=\"textSecondary\"\n        >\n          Required Stake to Vote\n        </Typography>\n      </SecondContainer>\n\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <AdditionContainer item xs={3}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={6}>\n              <Field\n                name=\"vote_stake_mygt\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={6}>\n              <Typography color=\"textSecondary\">MYGT</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.vote_stake_mygt && touched.vote_stake_mygt ? (\n            <ErrorText>{errors.vote_stake_mygt}</ErrorText>\n          ) : null}\n        </AdditionContainer>\n        <Grid item xs={1}>\n          <Grid item container justify=\"center\">\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              +\n            </Typography>\n          </Grid>\n        </Grid>\n        <AdditionContainer item xs={2}>\n          <ItemContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <GridItemCenter item xs={9}>\n              <Field\n                name=\"vote_stake_percentage\"\n                type=\"number\"\n                placeholder=\"00\"\n                component={TextField}\n              ></Field>{\" \"}\n            </GridItemCenter>\n            <GridItemCenter item xs={2}>\n              <Typography color=\"textSecondary\">%</Typography>\n            </GridItemCenter>\n          </ItemContainer>\n          {errors.vote_stake_percentage && touched.vote_stake_percentage ? (\n            <ErrorText>{errors.vote_stake_percentage}</ErrorText>\n          ) : null}\n        </AdditionContainer>\n        <Grid item xs={3}>\n          <Grid item container>\n            <Title variant=\"subtitle1\" color=\"textSecondary\">\n              of Proposal Value\n            </Title>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <SpacingContainer direction=\"row\" container alignItems=\"center\">\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Minimum Stake{\" \"}\n        </Typography>\n        <Title variant=\"subtitle2\" color=\"textSecondary\">\n          (% of proposal value)\n        </Title>\n      </SpacingContainer>\n\n      <LastElement container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <GridNoPadding item xs={10}>\n          <Field name=\"min_stake\">\n            {() => (\n              <StyledSlider\n                value={getIn(values, \"min_stake\")}\n                onChange={(value: any, newValue: any) =>\n                  setFieldValue(\"min_stake\", newValue)\n                }\n              />\n            )}\n          </Field>\n        </GridNoPadding>\n        <GridNoPadding item xs={2}>\n          <CustomSliderValue>\n            <Value variant=\"subtitle1\" color=\"textSecondary\">\n              {getIn(values, \"min_stake\")}%\n            </Value>\n          </CustomSliderValue>\n        </GridNoPadding>\n      </LastElement>\n    </>\n  );\n};\n\nexport const Governance: React.FC<{\n  defineSubmit: any;\n  setActiveStep: any;\n  setGovernanceStep: any;\n  setProgress: any;\n}> = ({ defineSubmit, setActiveStep, setGovernanceStep, setProgress }) => {\n  const storageDaoInformation = useSelector<\n    AppState,\n    AppState[\"saveDaoInformationReducer\"]\n  >((state) => state.saveDaoInformationReducer);\n\n  const dispatch = useDispatch();\n\n  setProgress(25);\n\n  const saveStepInfo = (values: any, { setSubmitting }: any) => {\n    setSubmitting(true);\n    dispatch(saveDaoInformation(values));\n    setActiveStep(1);\n    setGovernanceStep(1);\n  };\n\n  const validate = (values: Values) => {\n    const errors: any = {};\n\n    if (values.proposal_days === undefined || !String(values.proposal_days)) {\n      errors.proposal_days = \"Required\";\n    }\n    if (\n      values.proposal_minutes === undefined ||\n      !String(values.proposal_minutes)\n    ) {\n      errors.proposal_minutes = \"Required\";\n    }\n    if (values.proposal_hours === undefined || !String(values.proposal_hours)) {\n      errors.proposal_hours = \"Required\";\n    }\n    if (values.voting_days === undefined || !String(values.voting_days)) {\n      errors.voting_days = \"Required\";\n    }\n    if (values.voting_hours === undefined || !String(values.voting_hours)) {\n      errors.voting_hours = \"Required\";\n    }\n    if (values.voting_minutes === undefined || !String(values.voting_minutes)) {\n      errors.voting_minutes = \"Required\";\n    }\n    if (\n      values.propose_stake_mygt === undefined ||\n      !String(values.propose_stake_mygt)\n    ) {\n      errors.propose_stake_mygt = \"Required\";\n    }\n    if (\n      values.propose_stake_percentage === undefined ||\n      !String(values.propose_stake_percentage)\n    ) {\n      errors.propose_stake_percentage = \"Required\";\n    }\n    if (\n      values.vote_stake_mygt === undefined ||\n      !String(values.vote_stake_mygt)\n    ) {\n      errors.vote_stake_mygt = \"Required\";\n    }\n    if (\n      values.vote_stake_percentage === undefined ||\n      !String(values.vote_stake_percentage)\n    ) {\n      errors.vote_stake_percentage = \"Required\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" color=\"textSecondary\">\n            Proposals & Voting\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\">\n        <Grid item xs={12}>\n          <CustomTypography variant=\"subtitle1\" color=\"textSecondary\">\n            These settings will define the duration, support and approval\n            required for proposals.\n          </CustomTypography>\n        </Grid>\n      </Grid>\n\n      <Formik\n        enableReinitialize\n        validate={validate}\n        onSubmit={saveStepInfo}\n        initialValues={storageDaoInformation}\n      >\n        {({\n          submitForm,\n          isSubmitting,\n          setFieldValue,\n          values,\n          errors,\n          touched,\n        }) => {\n          return (\n            <Form style={{ width: \"100%\" }}>\n              <GovernanceForm\n                defineSubmit={defineSubmit}\n                validate={validate}\n                submitForm={submitForm}\n                isSubmitting={isSubmitting}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                touched={touched}\n                values={values}\n              />\n            </Form>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/hooks/useOriginate.tsx",["239"],"import React, { useCallback, useState } from \"react\";\nimport { MetadataCarrierParameters } from \"../contracts/metadataCarrier/types\";\nimport { deployMetadataCarrier } from \"../contracts/metadataCarrier/deploy\";\nimport { TreasuryParams } from \"../contracts/treasuryDAO/types\";\nimport { ContractAbstraction, ContractProvider } from \"@taquito/taquito\";\nimport { deployTreasuryDAO } from \"../contracts/treasuryDAO/deploy\";\n\ntype ContractName = \"Treasury\" | \"MetadataCarrier\";\n\ntype Parameters<T extends ContractName> = T extends \"Treasury\"\n  ? TreasuryParams\n  : MetadataCarrierParameters;\n\ntype DeployFunction = (\n  parameters: any\n) => Promise<ContractAbstraction<ContractProvider> | undefined>;\n\nconst deployFunctionMap: Record<ContractName, DeployFunction> = {\n  Treasury: deployTreasuryDAO,\n  MetadataCarrier: deployMetadataCarrier,\n};\n\nexport const useOriginate = <T extends ContractName>(\n  contractName: T,\n  parameters: Parameters<T>\n): [\n  () => Promise<void>,\n  {\n    data: ContractAbstraction<ContractProvider> | undefined;\n    loading: boolean;\n    error: any;\n  }\n] => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [contract, setContract] = useState<\n    ContractAbstraction<ContractProvider>\n  >();\n\n  const originate = useCallback(async () => {\n    setLoading(true);\n    try {\n      const result = await deployFunctionMap[contractName](parameters);\n      setContract(result);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, [contractName, parameters]);\n  return [originate, { loading, error, data: contract }];\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daocreator/ConnectWallet.tsx",["240","241","242"],"import {\n  Grid,\n  Typography,\n  Box,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  styled,\n  Button,\n} from \"@material-ui/core\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { useConnectWallet } from \"../../store/wallet/hook\";\n\nconst PageContainer = styled(Grid)({\n  height: \"90%\",\n});\n\nconst SpacingTitle = styled(Typography)({\n  marginBottom: 15,\n});\n\nexport const ConnectWallet: React.FC = () => {\n  const { tezos, connect } = useConnectWallet();\n\n  const account = useSelector<AppState, AppState[\"wallet\"][\"address\"]>(\n    (state) => state.wallet.address\n  );\n\n  return (\n    <PageContainer container justify=\"flex-start\" alignItems=\"center\">\n      <Grid item>\n        <SpacingTitle align=\"left\" variant=\"h3\" color=\"textSecondary\">\n          Connect your wallet\n        </SpacingTitle>\n        <SpacingTitle align=\"left\" variant=\"subtitle1\" color=\"textSecondary\">\n          Create an organization by picking a template below\n        </SpacingTitle>\n        <Box>\n          <List>\n            <ListItem button={true} onClick={() => connect()}>\n              <ListItemAvatar>\n                <Avatar>\n                  <ImageIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {\" \"}\n                  Connect\n                </Typography>{\" \"}\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Box>\n      </Grid>\n    </PageContainer>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/SearchInput.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/Header.tsx",["243"],"import { Button, Grid, styled, Typography, withTheme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst StyledContainer = styled(withTheme(Grid))((props) => ({\n  background: props.theme.palette.primary.main,\n  height: 184,\n  paddingLeft: \"6%\",\n  paddingRight: \"6%\",\n  paddingTop: \"4%\",\n  boxSizing: \"border-box\",\n}));\n\nconst StyledButton = styled(withTheme(Button))((props) => ({\n  height: 53,\n  color: props.theme.palette.text.secondary,\n  borderColor: props.theme.palette.secondary.main,\n  minWidth: 171,\n}));\n\nconst JustifyEndGrid = styled(withTheme(Grid))((props) => ({\n  textAlign: \"end\",\n}));\n\nexport const Header: React.FC<{\n  name: string;\n  buttonLabel: string;\n}> = ({ name, buttonLabel }) => {\n  return (\n    <StyledContainer container direction=\"row\">\n      <Grid item xs={6}>\n        <Typography variant=\"subtitle1\" color=\"secondary\">\n          {name}\n        </Typography>\n        <Typography variant=\"h5\" color=\"textSecondary\">\n          Treasury\n        </Typography>\n      </Grid>\n      <JustifyEndGrid item xs={6}>\n        <StyledButton variant=\"outlined\">{buttonLabel}</StyledButton>\n      </JustifyEndGrid>\n    </StyledContainer>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/ProposalTableRow.tsx",["244"],"import {\n  styled,\n  Grid,\n  Box,\n  Typography,\n  useTheme,\n  IconButton,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport React from \"react\";\n\ntype ProgressColor = \"success\" | \"warning\" | \"danger\";\n\nconst progressColorMap = {\n  success: \"#81FEB7\",\n  warning: \"#DBDE39\",\n  danger: \"#DE3939\",\n};\n\nconst ProposalTableRowContainer = styled(Grid)({\n  height: 155,\n  borderBottom: \"2px solid #3D3D3D\",\n});\n\nexport interface ProposalTableRowData {\n  title: string;\n  number: number;\n  date: string;\n  cycle: number;\n  support: number;\n  color: ProgressColor;\n}\n\nconst StyledProgress = styled(CircularProgress)(\n  ({ circleColor }: { circleColor: string }) => ({\n    height: 68,\n    width: 68,\n    \"& .MuiCircularProgress-root\": {\n      background: \"#3D3D3D\",\n    },\n    \"& .MuiCircularProgress-circle\": {\n      color: circleColor,\n    },\n  })\n);\n\nconst SupportText = styled(Typography)(\n  ({ textColor }: { textColor: string }) => ({\n    paddingLeft: 20,\n    color: textColor,\n  })\n);\n\nconst ArrowButton = styled(IconButton)({\n  color: \"#3D3D3D\",\n});\n\nexport const ProposalTableRow: React.FC<ProposalTableRowData> = ({\n  title,\n  number,\n  date,\n  cycle,\n  support,\n  color,\n}) => {\n  const theme = useTheme();\n\n  return (\n    <ProposalTableRowContainer item container alignItems=\"center\">\n      <Grid item xs={5}>\n        <Box>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            {title}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"body1\" color=\"textSecondary\">\n            #{number} • {date}\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {cycle}\n        </Typography>\n      </Grid>\n      <Grid item xs={5} container justify=\"space-between\" alignItems=\"center\">\n        <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <StyledProgress\n                value={support}\n                circleColor={progressColorMap[color]}\n                variant=\"determinate\"\n              />\n            </Grid>\n            <Grid item>\n              <SupportText textColor={progressColorMap[color]}>\n                Support\n              </SupportText>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ArrowButton>\n            <ArrowForwardIcon fontSize={\"large\"} color=\"inherit\" />\n          </ArrowButton>\n        </Grid>\n      </Grid>\n    </ProposalTableRowContainer>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/store/index.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/TokenHoldersRow.tsx",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/treasuryDAO/deploy.ts",["245"],"import { MichelsonMap } from \"@taquito/taquito\";\nimport { char2Bytes } from \"@taquito/tzip16\";\nimport { MetadataCarrierDeploymentData } from \"../metadataCarrier/types\";\nimport { addNewContractToIPFS } from \"../store\";\nimport { getTestProvider } from \"../utils\";\nimport { code } from \"./code\";\nimport { MemberTokenAllocation, TreasuryParams } from \"./types\";\n\nconst setMembersAllocation = (allocations: MemberTokenAllocation[]) => {\n  const map = new MichelsonMap();\n\n  allocations.forEach((allocation) => {\n    map.set(\n      { 0: allocation.address, 1: allocation.tokenId },\n      allocation.amount\n    );\n  });\n\n  return map;\n};\n\nconst setMetadata = ({\n  deployAddress,\n  keyName,\n}: MetadataCarrierDeploymentData) => {\n  const map = new MichelsonMap();\n\n  map.set(\"\", char2Bytes(`tezos-storage://${deployAddress}/${keyName}`));\n\n  return map;\n};\n\nexport const deployTreasuryDAO = async ({\n  storage: {\n    membersTokenAllocation,\n    adminAddress,\n    frozenScaleValue,\n    frozenExtraValue,\n    slashScaleValue,\n    slashDivisionValue,\n    minXtzAmount,\n    maxXtzAmount,\n    maxProposalSize,\n    quorumTreshold,\n    votingPeriod,\n  },\n  metadataCarrierDeploymentData,\n}: TreasuryParams) => {\n  const ledger = setMembersAllocation(membersTokenAllocation);\n  const metadata = setMetadata(metadataCarrierDeploymentData);\n\n  try {\n    const Tezos = await getTestProvider();\n\n    console.log(\"Originating Treasury DAO contract...\");\n\n    const t = await Tezos.contract.originate({\n      code,\n      storage: {\n        ledger,\n        operators: new MichelsonMap(),\n        token_address: \"tz1aSkwEot3L2kmUvcoxzjMomb9mvBNuzFK6\",\n        admin: adminAddress,\n        pending_owner: \"tz1aSkwEot3L2kmUvcoxzjMomb9mvBNuzFK6\",\n        migration_status: { notInMigration: \"Unit\" },\n        voting_period: votingPeriod,\n        quorum_threshold: quorumTreshold,\n        extra: {\n          frozen_scale_value: frozenScaleValue,\n          frozen_extra_value: frozenExtraValue,\n          slash_scale_value: slashScaleValue,\n          slash_division_value: slashDivisionValue,\n          min_xtz_amount: minXtzAmount,\n          max_xtz_amount: maxXtzAmount,\n          max_proposal_size: maxProposalSize,\n        },\n        proposals: new MichelsonMap(),\n        proposal_key_list_sort_by_date: [],\n        permits_counter: 0,\n        metadata,\n      },\n    });\n    console.log(\"Waiting for confirmation on Treasury DAO contract...\", t);\n    const c = await t.contract();\n    console.log(\"Treasury DAO deployment completed\", c);\n    console.log(\"Let's store the contract address in IPFS :-D\");\n    await addNewContractToIPFS(c.address);\n    return c;\n  } catch (e) {\n    console.log(\"error \", e);\n  }\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/deploy.ts",["246"],"import { MichelsonMap } from \"@taquito/taquito\";\nimport { char2Bytes } from \"@taquito/tzip16\";\nimport { getTestProvider } from \"../utils\";\nimport { code } from \"./code\";\nimport { setMetadataJSON } from \"./metadata\";\nimport { FA2MetadataParams, MetadataCarrierParameters } from \"./types\";\n\nconst setMetadataMap = (keyName: string, metadata: FA2MetadataParams) => {\n  const map = new MichelsonMap();\n  const json = setMetadataJSON(metadata);\n\n  map.set(keyName, char2Bytes(JSON.stringify(json)));\n\n  return map;\n};\n\nexport const deployMetadataCarrier = async ({\n  keyName,\n  metadata,\n}: MetadataCarrierParameters) => {\n  const Tezos = await getTestProvider();\n  const metadataMap = setMetadataMap(keyName, metadata);\n\n  try {\n    console.log(\"Originating Metadata Carrier contract...\");\n\n    const t = await Tezos.contract.originate({\n      code,\n      storage: {\n        metadata: metadataMap,\n      },\n    });\n    console.log(\"Waiting for confirmation on Metadata Carrier contract...\", t);\n    const c = await t.contract();\n    console.log(\"Metadata Carrier deployment completed\", c);\n    return c;\n  } catch (e) {\n    console.log(\"error \", e);\n  }\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/treasuryDAO/code.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/metadata.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/utils.ts",["247"],"import { InMemorySigner } from \"@taquito/signer\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nexport const getTestProvider = async () => {\n  const Tezos = new TezosToolkit(\"https://api.tez.ie/rpc/delphinet\");\n\n  Tezos.setProvider({\n    signer: await InMemorySigner.fromSecretKey(\n      \"edsk3QoqBuvdamxouPhin7swCvkQNgq4jP5KZPbwWNnwdZpSpJiEbq\"\n    ),\n  });\n\n  return Tezos;\n};\n\nexport const stringToHex = (value: string): string => {\n  let result = \"\";\n\n  for (let i = 0; i < value.length; i++) {\n    result += value.charCodeAt(i).toString(16).slice(-4);\n  }\n\n  return result;\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/contracts/metadataCarrier/code.ts",[],"/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/pages/Proposals.tsx",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import {\n  Box,\n  Grid,\n  Paper,\n  styled,\n  Typography,\n  withTheme,\n  Button,\n  IconButton,\n  LinearProgress\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Header } from \"../components/Header\";\nimport { NewProposalDialog } from \"../components/NewProposalDialog\";\nimport {\n  ProposalTableRowData,\n  ProposalTableRow\n} from \"../components/ProposalTableRow\";\nimport { SideBar } from \"../components/SideBar\";\n\nconst StyledContainer = styled(withTheme(Grid))(props => ({\n  background: props.theme.palette.primary.main,\n  height: 184,\n  paddingLeft: \"6%\",\n  paddingRight: \"6%\",\n  paddingTop: \"4%\",\n  boxSizing: \"border-box\"\n}));\n\nconst JustifyEndGrid = styled(withTheme(Grid))(props => ({\n  textAlign: \"end\"\n}));\n\nconst PageLayout = styled(Grid)(({ theme }) => ({\n  background: theme.palette.primary.main,\n  minHeight: \"calc(100vh - 102px)\"\n}));\n\nconst MainContainer = styled(Grid)({\n  paddingBottom: 0,\n  padding: \"40px 112px\",\n  borderBottom: \"2px solid #3D3D3D\"\n});\n\nconst StatsBox = styled(Grid)({\n  borderRight: \"2px solid #3D3D3D\",\n  width: \"unset\"\n});\n\nconst StatsContainer = styled(Grid)({\n  height: 175,\n  borderBottom: \"2px solid #3D3D3D\"\n});\n\nconst TokensLocked = styled(StatsBox)({\n  padding: \"0 50px 0 112px\"\n});\n\nconst LockedTokensBar = styled(LinearProgress)({\n  width: \"100%\",\n  \"&.MuiLinearProgress-colorSecondary\": {\n    background: \"#3D3D3D\"\n  }\n});\n\nconst VotingAddresses = styled(StatsBox)({\n  minWidth: 250\n});\n\nconst ActiveProposals = styled(StatsBox)({\n  paddingLeft: \"42px\"\n});\n\nconst TableContainer = styled(Box)({\n  width: \"100%\",\n  padding: \"72px 112px\",\n  paddingBottom: 30,\n  boxSizing: \"border-box\"\n});\n\nconst TableHeader = styled(Grid)({\n  borderBottom: \"2px solid #3D3D3D\",\n  paddingBottom: 20\n});\n\nconst ProposalsContainer = styled(Grid)({\n  paddingBottom: 72\n});\n\nconst UnderlineText = styled(Typography)({\n  textDecoration: \"underline\",\n  cursor: \"pointer\"\n});\n\nconst ProposalTableHeadText: React.FC = ({ children }) => (\n  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n    {children}\n  </Typography>\n);\n\nconst proposals: ProposalTableRowData[] = [\n  {\n    title: \"Contribute to the fund\",\n    number: 43,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"success\"\n  },\n  {\n    title: \"Contribute to the fund\",\n    number: 42,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"warning\"\n  },\n  {\n    title: \"Contribute to the fund\",\n    number: 41,\n    date: \"11/06/2020\",\n    cycle: 7,\n    support: 65,\n    color: \"danger\"\n  }\n];\n\nexport const Proposals: React.FC = () => {\n  const history = useHistory<any>();\n\n  return (\n    <>\n      <PageLayout container wrap=\"nowrap\">\n        <SideBar />\n        <Grid item xs>\n          <MainContainer>\n            <StyledContainer container direction=\"row\">\n              <Grid item xs={6}>\n                <Typography variant=\"subtitle1\" color=\"secondary\">\n                  MY GREAT TOKEN\n                </Typography>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  Proposals\n                </Typography>\n              </Grid>\n              <JustifyEndGrid item xs={6}>\n                <NewProposalDialog />\n              </JustifyEndGrid>\n            </StyledContainer>\n          </MainContainer>\n          <StatsContainer container>\n            <TokensLocked\n              item\n              xs={6}\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid container justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <Box>\n                    <Typography variant=\"subtitle2\" color=\"secondary\">\n                      MGTO Locked\n                    </Typography>\n                  </Box>\n                  <Box padding=\"12px 0\">\n                    <Typography variant=\"h3\" color=\"textSecondary\">\n                      21,202\n                    </Typography>\n                  </Box>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"subtitle2\" color=\"secondary\">\n                    View\n                  </Typography>\n                </Grid>\n              </Grid>\n              <LockedTokensBar\n                variant=\"determinate\"\n                value={60}\n                color=\"secondary\"\n              />\n            </TokensLocked>\n            <VotingAddresses\n              item\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Box>\n                <Typography variant=\"subtitle2\" color=\"secondary\">\n                  Voting Addresses\n                </Typography>\n                <Typography variant=\"h3\" color=\"textSecondary\">\n                  215\n                </Typography>\n              </Box>\n            </VotingAddresses>\n            <ActiveProposals\n              item\n              xs\n              container\n              direction=\"column\"\n              justify=\"center\"\n            >\n              <Box>\n                <Typography variant=\"subtitle2\" color=\"secondary\">\n                  Active Proposals\n                </Typography>\n                <Typography variant=\"h3\" color=\"textSecondary\">\n                  5\n                </Typography>\n              </Box>\n            </ActiveProposals>\n          </StatsContainer>\n          <TableContainer>\n            <TableHeader container wrap=\"nowrap\">\n              <Grid item xs={5}>\n                <ProposalTableHeadText>ACTIVE PROPOSALS</ProposalTableHeadText>\n              </Grid>\n              <Grid item xs={2}>\n                <ProposalTableHeadText>CYCLE</ProposalTableHeadText>\n              </Grid>\n              <Grid item xs={5}>\n                <ProposalTableHeadText>{\"\"}</ProposalTableHeadText>\n              </Grid>\n            </TableHeader>\n            {proposals.map((proposal, i) => (\n              <ProposalTableRow key={`proposal-${i}`} {...proposal} />\n            ))}\n          </TableContainer>\n          <ProposalsContainer\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <UnderlineText\n              color=\"textSecondary\"\n              variant=\"subtitle1\"\n              align=\"center\"\n            >\n              LOAD MORE\n            </UnderlineText>\n          </ProposalsContainer>\n        </Grid>\n      </PageLayout>\n    </>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/SideBar.tsx",["277","278"],"import { Grid, styled, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport HouseIcon from \"../../../assets/logos/house.svg\";\nimport VotingIcon from \"../../../assets/logos/voting.svg\";\n\nconst Bar = styled(Grid)({\n  width: 102,\n  borderRight: \"2px solid #3D3D3D\"\n});\n\nconst SidebarButton = styled(IconButton)({\n  paddingTop: 32,\n  width: \"100%\"\n});\n\nexport const SideBar: React.FC = () => {\n  return (\n    <Bar item>\n      <SidebarButton>\n        <img src={HouseIcon} />\n      </SidebarButton>\n      <SidebarButton>\n        <img src={VotingIcon} />\n      </SidebarButton>\n    </Bar>\n  );\n};\n","/Users/fabiolalombardi/Desktop/homebase-app/src/pages/daoexplorer/components/NewProposalDialog.tsx",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"/Users/fabiolalombardi/Desktop/homebase-app/src/store/funds/reducer.ts",["300","301","302","303","304","305","306"],"import { createReducer } from \"@reduxjs/toolkit\";\nimport { fundsInformation } from \"./action\";\nimport { Receipt } from \"./types\";\n\n\nexport interface DaoInformation {\n    receipts: Array<Receipt>;\n    description: string;\n    fee: number;\n}\n\nexport const initialState: DaoInformation = {\n    description: \"\",\n    fee: 15,\n    receipts: [{recipient: \"\", amount: 0}]\n};\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(fundsInformation, (state, action) => {\n    state.description = action.payload.description;\n    state.fee = action.payload.fee;\n    state.receipts = action.payload.receipts;\n  })\n);\n","/Users/fabiolalombardi/Desktop/homebase-app/src/store/funds/action.ts",["307","308","309","310"],"import { createAction } from \"@reduxjs/toolkit\";\nimport { Receipt } from \"./types\";\n\n\nexport const fundsInformation = createAction<{\n    receipts: Array<Receipt>;\n    description: string;\n    fee: number;\n\n}>(\"dao/fundsInformation\");\n",{"ruleId":"311","severity":1,"message":"312","line":8,"column":34,"nodeType":"313","messageId":"314","endLine":8,"endColumn":39},{"ruleId":"315","severity":1,"message":"316","line":70,"column":11,"nodeType":"317","messageId":"318","endLine":70,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":145,"column":30,"nodeType":null,"endLine":145,"endColumn":30,"fix":"321"},{"ruleId":"319","severity":1,"message":"320","line":153,"column":23,"nodeType":null,"endLine":153,"endColumn":23,"fix":"322"},{"ruleId":"319","severity":1,"message":"320","line":154,"column":8,"nodeType":null,"endLine":154,"endColumn":8,"fix":"323"},{"ruleId":"319","severity":1,"message":"320","line":163,"column":19,"nodeType":null,"endLine":163,"endColumn":19,"fix":"324"},{"ruleId":"319","severity":1,"message":"320","line":164,"column":8,"nodeType":null,"endLine":164,"endColumn":8,"fix":"325"},{"ruleId":"315","severity":1,"message":"326","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":13},{"ruleId":"311","severity":1,"message":"312","line":8,"column":33,"nodeType":"313","messageId":"314","endLine":8,"endColumn":38},{"ruleId":"319","severity":1,"message":"320","line":95,"column":20,"nodeType":null,"endLine":95,"endColumn":20,"fix":"327"},{"ruleId":"311","severity":1,"message":"312","line":136,"column":20,"nodeType":"313","messageId":"314","endLine":136,"endColumn":25},{"ruleId":"315","severity":1,"message":"328","line":137,"column":9,"nodeType":"317","messageId":"318","endLine":137,"endColumn":14},{"ruleId":"319","severity":1,"message":"329","line":304,"column":28,"nodeType":null,"endLine":304,"endColumn":91,"fix":"330"},{"ruleId":"319","severity":1,"message":"331","line":305,"column":25,"nodeType":null,"endLine":305,"endColumn":135,"fix":"332"},{"ruleId":"319","severity":1,"message":"333","line":306,"column":3,"nodeType":null,"endLine":306,"endColumn":3,"fix":"334"},{"ruleId":"315","severity":1,"message":"335","line":12,"column":17,"nodeType":"317","messageId":"318","endLine":12,"endColumn":27},{"ruleId":"315","severity":1,"message":"336","line":88,"column":51,"nodeType":"317","messageId":"318","endLine":88,"endColumn":56},{"ruleId":"315","severity":1,"message":"337","line":151,"column":16,"nodeType":"317","messageId":"318","endLine":151,"endColumn":39},{"ruleId":"338","severity":1,"message":"339","line":187,"column":21,"nodeType":"340","messageId":"341","endLine":187,"endColumn":39},{"ruleId":"338","severity":1,"message":"339","line":191,"column":9,"nodeType":"340","messageId":"341","endLine":191,"endColumn":30},{"ruleId":"338","severity":1,"message":"339","line":192,"column":9,"nodeType":"340","messageId":"341","endLine":192,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":193,"column":9,"nodeType":"340","messageId":"341","endLine":193,"endColumn":32},{"ruleId":"342","severity":1,"message":"343","line":220,"column":6,"nodeType":"344","endLine":220,"endColumn":19,"suggestions":"345"},{"ruleId":"315","severity":1,"message":"346","line":224,"column":41,"nodeType":"317","messageId":"318","endLine":224,"endColumn":60},{"ruleId":"315","severity":1,"message":"316","line":280,"column":11,"nodeType":"317","messageId":"318","endLine":280,"endColumn":16},{"ruleId":"315","severity":1,"message":"347","line":306,"column":30,"nodeType":"317","messageId":"318","endLine":306,"endColumn":35},{"ruleId":"315","severity":1,"message":"348","line":1,"column":16,"nodeType":"317","messageId":"318","endLine":1,"endColumn":21},{"ruleId":"315","severity":1,"message":"349","line":14,"column":7,"nodeType":"317","messageId":"318","endLine":14,"endColumn":22},{"ruleId":"315","severity":1,"message":"350","line":38,"column":7,"nodeType":"317","messageId":"318","endLine":38,"endColumn":28},{"ruleId":"315","severity":1,"message":"351","line":43,"column":7,"nodeType":"317","messageId":"318","endLine":43,"endColumn":30},{"ruleId":"315","severity":1,"message":"352","line":49,"column":7,"nodeType":"317","messageId":"318","endLine":49,"endColumn":21},{"ruleId":"315","severity":1,"message":"353","line":54,"column":7,"nodeType":"317","messageId":"318","endLine":54,"endColumn":19},{"ruleId":"315","severity":1,"message":"354","line":64,"column":7,"nodeType":"317","messageId":"318","endLine":64,"endColumn":24},{"ruleId":"315","severity":1,"message":"355","line":71,"column":7,"nodeType":"317","messageId":"318","endLine":71,"endColumn":28},{"ruleId":"315","severity":1,"message":"356","line":81,"column":7,"nodeType":"317","messageId":"318","endLine":81,"endColumn":18},{"ruleId":"315","severity":1,"message":"357","line":86,"column":7,"nodeType":"317","messageId":"318","endLine":86,"endColumn":23},{"ruleId":"342","severity":1,"message":"358","line":122,"column":6,"nodeType":"344","endLine":122,"endColumn":14,"suggestions":"359"},{"ruleId":"315","severity":1,"message":"360","line":143,"column":22,"nodeType":"317","messageId":"318","endLine":143,"endColumn":34},{"ruleId":"342","severity":1,"message":"358","line":101,"column":6,"nodeType":"344","endLine":101,"endColumn":14,"suggestions":"361"},{"ruleId":"315","severity":1,"message":"362","line":2,"column":3,"nodeType":"317","messageId":"318","endLine":2,"endColumn":7},{"ruleId":"342","severity":1,"message":"358","line":145,"column":6,"nodeType":"344","endLine":145,"endColumn":14,"suggestions":"363"},{"ruleId":"315","severity":1,"message":"326","line":1,"column":8,"nodeType":"317","messageId":"318","endLine":1,"endColumn":13},{"ruleId":"315","severity":1,"message":"364","line":11,"column":3,"nodeType":"317","messageId":"318","endLine":11,"endColumn":9},{"ruleId":"315","severity":1,"message":"316","line":28,"column":11,"nodeType":"317","messageId":"318","endLine":28,"endColumn":16},{"ruleId":"315","severity":1,"message":"365","line":30,"column":9,"nodeType":"317","messageId":"318","endLine":30,"endColumn":16},{"ruleId":"315","severity":1,"message":"336","line":20,"column":49,"nodeType":"317","messageId":"318","endLine":20,"endColumn":54},{"ruleId":"315","severity":1,"message":"366","line":67,"column":9,"nodeType":"317","messageId":"318","endLine":67,"endColumn":14},{"ruleId":"311","severity":1,"message":"312","line":33,"column":34,"nodeType":"313","messageId":"314","endLine":48,"endColumn":22},{"ruleId":"311","severity":1,"message":"312","line":17,"column":38,"nodeType":"313","messageId":"314","endLine":20,"endColumn":33},{"ruleId":"311","severity":1,"message":"312","line":4,"column":32,"nodeType":"313","messageId":"314","endLine":4,"endColumn":43},{"ruleId":"315","severity":1,"message":"348","line":4,"column":3,"nodeType":"317","messageId":"318","endLine":4,"endColumn":8},{"ruleId":"315","severity":1,"message":"364","line":8,"column":3,"nodeType":"317","messageId":"318","endLine":8,"endColumn":9},{"ruleId":"315","severity":1,"message":"367","line":9,"column":3,"nodeType":"317","messageId":"318","endLine":9,"endColumn":13},{"ruleId":"319","severity":1,"message":"320","line":10,"column":17,"nodeType":null,"endLine":10,"endColumn":17,"fix":"368"},{"ruleId":"315","severity":1,"message":"369","line":14,"column":10,"nodeType":"317","messageId":"318","endLine":14,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":18,"column":19,"nodeType":null,"endLine":18,"endColumn":19,"fix":"370"},{"ruleId":"319","severity":1,"message":"371","line":22,"column":49,"nodeType":null,"endLine":22,"endColumn":54,"fix":"372"},{"ruleId":"319","severity":1,"message":"320","line":28,"column":26,"nodeType":null,"endLine":28,"endColumn":26,"fix":"373"},{"ruleId":"319","severity":1,"message":"371","line":31,"column":48,"nodeType":null,"endLine":31,"endColumn":53,"fix":"374"},{"ruleId":"315","severity":1,"message":"336","line":31,"column":48,"nodeType":"317","messageId":"318","endLine":31,"endColumn":53},{"ruleId":"319","severity":1,"message":"320","line":32,"column":19,"nodeType":null,"endLine":32,"endColumn":19,"fix":"375"},{"ruleId":"319","severity":1,"message":"320","line":37,"column":35,"nodeType":null,"endLine":37,"endColumn":35,"fix":"376"},{"ruleId":"319","severity":1,"message":"320","line":43,"column":36,"nodeType":null,"endLine":43,"endColumn":36,"fix":"377"},{"ruleId":"319","severity":1,"message":"320","line":48,"column":17,"nodeType":null,"endLine":48,"endColumn":17,"fix":"378"},{"ruleId":"319","severity":1,"message":"320","line":53,"column":36,"nodeType":null,"endLine":53,"endColumn":36,"fix":"379"},{"ruleId":"319","severity":1,"message":"320","line":57,"column":28,"nodeType":null,"endLine":57,"endColumn":28,"fix":"380"},{"ruleId":"319","severity":1,"message":"320","line":63,"column":26,"nodeType":null,"endLine":63,"endColumn":26,"fix":"381"},{"ruleId":"319","severity":1,"message":"320","line":64,"column":4,"nodeType":null,"endLine":64,"endColumn":4,"fix":"382"},{"ruleId":"319","severity":1,"message":"320","line":68,"column":16,"nodeType":null,"endLine":68,"endColumn":16,"fix":"383"},{"ruleId":"319","severity":1,"message":"320","line":72,"column":22,"nodeType":null,"endLine":72,"endColumn":22,"fix":"384"},{"ruleId":"319","severity":1,"message":"320","line":79,"column":26,"nodeType":null,"endLine":79,"endColumn":26,"fix":"385"},{"ruleId":"319","severity":1,"message":"320","line":84,"column":20,"nodeType":null,"endLine":84,"endColumn":20,"fix":"386"},{"ruleId":"319","severity":1,"message":"320","line":88,"column":20,"nodeType":null,"endLine":88,"endColumn":20,"fix":"387"},{"ruleId":"319","severity":1,"message":"320","line":93,"column":20,"nodeType":null,"endLine":93,"endColumn":20,"fix":"388"},{"ruleId":"319","severity":1,"message":"320","line":109,"column":21,"nodeType":null,"endLine":109,"endColumn":21,"fix":"389"},{"ruleId":"319","severity":1,"message":"320","line":117,"column":21,"nodeType":null,"endLine":117,"endColumn":21,"fix":"390"},{"ruleId":"319","severity":1,"message":"320","line":125,"column":20,"nodeType":null,"endLine":125,"endColumn":20,"fix":"391"},{"ruleId":"319","severity":1,"message":"320","line":126,"column":4,"nodeType":null,"endLine":126,"endColumn":4,"fix":"392"},{"ruleId":"315","severity":1,"message":"393","line":130,"column":9,"nodeType":"317","messageId":"318","endLine":130,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":8,"column":35,"nodeType":null,"endLine":8,"endColumn":35,"fix":"394"},{"ruleId":"319","severity":1,"message":"320","line":13,"column":16,"nodeType":null,"endLine":13,"endColumn":16,"fix":"395"},{"ruleId":"319","severity":1,"message":"320","line":14,"column":8,"nodeType":null,"endLine":14,"endColumn":8,"fix":"396"},{"ruleId":"319","severity":1,"message":"371","line":21,"column":48,"nodeType":null,"endLine":21,"endColumn":53,"fix":"397"},{"ruleId":"319","severity":1,"message":"320","line":25,"column":16,"nodeType":null,"endLine":25,"endColumn":16,"fix":"398"},{"ruleId":"319","severity":1,"message":"320","line":30,"column":20,"nodeType":null,"endLine":30,"endColumn":20,"fix":"399"},{"ruleId":"319","severity":1,"message":"320","line":37,"column":16,"nodeType":null,"endLine":37,"endColumn":16,"fix":"400"},{"ruleId":"319","severity":1,"message":"320","line":45,"column":22,"nodeType":null,"endLine":45,"endColumn":22,"fix":"401"},{"ruleId":"319","severity":1,"message":"320","line":53,"column":22,"nodeType":null,"endLine":53,"endColumn":22,"fix":"402"},{"ruleId":"319","severity":1,"message":"320","line":57,"column":19,"nodeType":null,"endLine":57,"endColumn":19,"fix":"403"},{"ruleId":"319","severity":1,"message":"320","line":66,"column":27,"nodeType":null,"endLine":66,"endColumn":27,"fix":"404"},{"ruleId":"319","severity":1,"message":"320","line":80,"column":20,"nodeType":null,"endLine":80,"endColumn":20,"fix":"405"},{"ruleId":"319","severity":1,"message":"406","line":87,"column":5,"nodeType":null,"endLine":87,"endColumn":10,"fix":"407"},{"ruleId":"315","severity":1,"message":"408","line":91,"column":9,"nodeType":"317","messageId":"318","endLine":91,"endColumn":17},{"ruleId":"315","severity":1,"message":"409","line":94,"column":10,"nodeType":"317","messageId":"318","endLine":94,"endColumn":23},{"ruleId":"315","severity":1,"message":"410","line":94,"column":25,"nodeType":"317","messageId":"318","endLine":94,"endColumn":41},{"ruleId":"315","severity":1,"message":"411","line":95,"column":24,"nodeType":"317","messageId":"318","endLine":95,"endColumn":39},{"ruleId":"315","severity":1,"message":"412","line":107,"column":36,"nodeType":"317","messageId":"318","endLine":107,"endColumn":49},{"ruleId":"315","severity":1,"message":"413","line":164,"column":31,"nodeType":"317","messageId":"318","endLine":164,"endColumn":43},{"ruleId":"315","severity":1,"message":"414","line":164,"column":45,"nodeType":"317","messageId":"318","endLine":164,"endColumn":51},{"ruleId":"315","severity":1,"message":"415","line":164,"column":53,"nodeType":"317","messageId":"318","endLine":164,"endColumn":60},{"ruleId":"319","severity":1,"message":"416","line":169,"column":31,"nodeType":null,"endLine":169,"endColumn":43,"fix":"417"},{"ruleId":"319","severity":1,"message":"320","line":190,"column":46,"nodeType":null,"endLine":190,"endColumn":46,"fix":"418"},{"ruleId":"319","severity":1,"message":"419","line":5,"column":1,"nodeType":null,"endLine":6,"endColumn":1,"fix":"420"},{"ruleId":"319","severity":1,"message":"421","line":7,"column":3,"nodeType":null,"endLine":7,"endColumn":5,"fix":"422"},{"ruleId":"319","severity":1,"message":"423","line":8,"column":1,"nodeType":null,"endLine":8,"endColumn":5,"fix":"424"},{"ruleId":"319","severity":1,"message":"421","line":9,"column":1,"nodeType":null,"endLine":9,"endColumn":3,"fix":"425"},{"ruleId":"319","severity":1,"message":"423","line":13,"column":1,"nodeType":null,"endLine":13,"endColumn":5,"fix":"426"},{"ruleId":"319","severity":1,"message":"421","line":14,"column":3,"nodeType":null,"endLine":14,"endColumn":5,"fix":"427"},{"ruleId":"319","severity":1,"message":"428","line":15,"column":1,"nodeType":null,"endLine":15,"endColumn":43,"fix":"429"},{"ruleId":"319","severity":1,"message":"419","line":4,"column":1,"nodeType":null,"endLine":5,"endColumn":1,"fix":"430"},{"ruleId":"319","severity":1,"message":"421","line":6,"column":3,"nodeType":null,"endLine":6,"endColumn":5,"fix":"431"},{"ruleId":"319","severity":1,"message":"423","line":7,"column":1,"nodeType":null,"endLine":7,"endColumn":5,"fix":"432"},{"ruleId":"319","severity":1,"message":"433","line":8,"column":3,"nodeType":null,"endLine":9,"endColumn":1,"fix":"434"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'tezos' is assigned a value but never used.","Identifier","unusedVar","prettier/prettier","Insert `,`",{"range":"435","text":"436"},{"range":"437","text":"436"},{"range":"438","text":"436"},{"range":"439","text":"436"},{"range":"440","text":"436"},"'React' is defined but never used.",{"range":"441","text":"436"},"'match' is assigned a value but never used.","Replace `·container·direction=\"row\"·alignItems=\"center\"·justify=\"center\"` with `⏎··········container⏎··········direction=\"row\"⏎··········alignItems=\"center\"⏎··········justify=\"center\"⏎········`",{"range":"442","text":"443"},"Replace `·color=\"textSecondary\"·variant=\"subtitle1\"·align=\"center\"·onClick={()·=>·history.push(\"/explorer/proposals\")}>` with `⏎············color=\"textSecondary\"⏎············variant=\"subtitle1\"⏎············align=\"center\"⏎············onClick={()·=>·history.push(\"/explorer/proposals\")}`",{"range":"444","text":"445"},"Insert `········>⏎`",{"range":"446","text":"447"},"'useContext' is defined but never used.","'props' is defined but never used.","'loadingMetadataContract' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'originateTreasury'. Either include it or remove the dependency array.","ArrayExpression",["448"],"'handleNextStep' is defined but never used.","'index' is defined but never used.","'Paper' is defined but never used.","'CustomUrlButton' is assigned a value but never used.","'CustomColumnContainer' is assigned a value but never used.","'CustomSettingsContainer' is assigned a value but never used.","'CustomGridItem' is assigned a value but never used.","'CustomItalic' is assigned a value but never used.","'CustomItalicAdmin' is assigned a value but never used.","'CustomItalicAdminText' is assigned a value but never used.","'CustomToken' is assigned a value but never used.","'AddressContainer' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'defineSubmit' and 'submitForm'. Either include them or remove the dependency array. If 'defineSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["449"],"'arrayHelpers' is defined but never used.",["450"],"'Card' is defined but never used.",["451"],"'Button' is defined but never used.","'account' is assigned a value but never used.","'theme' is assigned a value but never used.","'IconButton' is defined but never used.",{"range":"452","text":"436"},"'Header' is defined but never used.",{"range":"453","text":"436"},"Replace `props` with `(props)`",{"range":"454","text":"455"},{"range":"456","text":"436"},{"range":"457","text":"455"},{"range":"458","text":"436"},{"range":"459","text":"436"},{"range":"460","text":"436"},{"range":"461","text":"436"},{"range":"462","text":"436"},{"range":"463","text":"436"},{"range":"464","text":"436"},{"range":"465","text":"436"},{"range":"466","text":"436"},{"range":"467","text":"436"},{"range":"468","text":"436"},{"range":"469","text":"436"},{"range":"470","text":"436"},{"range":"471","text":"436"},{"range":"472","text":"436"},{"range":"473","text":"436"},{"range":"474","text":"436"},{"range":"475","text":"436"},"'history' is assigned a value but never used.",{"range":"476","text":"436"},{"range":"477","text":"436"},{"range":"478","text":"436"},{"range":"479","text":"455"},{"range":"480","text":"436"},{"range":"481","text":"436"},{"range":"482","text":"436"},{"range":"483","text":"436"},{"range":"484","text":"436"},{"range":"485","text":"436"},{"range":"486","text":"436"},{"range":"487","text":"436"},"Replace `state` with `(state)`",{"range":"488","text":"489"},"'dispatch' is assigned a value but never used.","'activeReceipt' is assigned a value but never used.","'setActiveReceipt' is assigned a value but never used.","'setTotalReceipt' is assigned a value but never used.","'setSubmitting' is defined but never used.","'isSubmitting' is defined but never used.","'errors' is defined but never used.","'touched' is defined but never used.","Replace `arrayHelpers` with `(arrayHelpers)`",{"range":"490","text":"491"},{"range":"492","text":"436"},"Delete `⏎`",{"range":"493","text":"494"},"Delete `··`",{"range":"495","text":"494"},"Replace `····` with `··`",{"range":"496","text":"497"},{"range":"498","text":"494"},{"range":"499","text":"497"},{"range":"500","text":"494"},"Replace `····receipts:·[{recipient:·\"\",·amount:·0}]` with `··receipts:·[{·recipient:·\"\",·amount:·0·}],`",{"range":"501","text":"502"},{"range":"503","text":"494"},{"range":"504","text":"494"},{"range":"505","text":"497"},"Replace `··fee:·number;⏎` with `fee:·number;`",{"range":"506","text":"507"},[2667,2667],",",[2816,2816],[2824,2824],[2963,2963],[2971,2971],[2104,2104],[8353,8416],"\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"center\"\n        ",[8442,8552],"\n            color=\"textSecondary\"\n            variant=\"subtitle1\"\n            align=\"center\"\n            onClick={() => history.push(\"/explorer/proposals\")}",[8555,8555],"        >\n",{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"510","fix":"512"},{"desc":"510","fix":"513"},[110,110],[380,380],[520,525],"(props)",[683,683],[737,742],[767,767],[900,900],[1024,1024],[1114,1114],[1208,1208],[1281,1281],[1420,1420],[1424,1424],[1488,1488],[1558,1558],[1689,1689],[1786,1786],[1853,1853],[1952,1952],[2286,2286],[2424,2424],[2561,2561],[2565,2565],[281,281],[363,363],[440,440],[722,727],[859,859],[945,945],[1071,1071],[1224,1224],[1377,1377],[1440,1440],[1604,1604],[1858,1858],[2018,2023],"(state)",[4683,4695],"(arrayHelpers)",[5696,5696],[131,132],"",[168,170],[196,200],"  ",[221,223],[287,291],[310,312],[321,363],"  receipts: [{ recipient: \"\", amount: 0 }],",[85,86],[135,137],[163,167],[190,205],"fee: number;","Update the dependencies array to be: [carrierData, originateTreasury]",{"range":"514","text":"515"},"Update the dependencies array to be: [defineSubmit, submitForm]",{"range":"516","text":"517"},{"range":"518","text":"517"},{"range":"519","text":"517"},[5344,5357],"[carrierData, originateTreasury]",[2661,2669],"[defineSubmit, submitForm]",[2255,2263],[2849,2857]]